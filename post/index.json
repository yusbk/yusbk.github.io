[
    
        
            {
                "ref": "https://yusbk.github.io/2020/09/27/git-submodule/",
                "title": "git submodule",
                "section": "post",
                "date" : "2020.09.27",
                "body": "Rujukan di sini lebih teratur. Penerangan dibawah ialah berasaskan pengalaman sendiri tanpa struktur.\nRepo baru Bila buat repo baru dan ingin tetapkan submodule untuk tema harbor dan folder public ke yusbk.github.io. Submodule dipakai untuk memasukkan fungsi yang terdapat di repos lain ke dalam repos sendiri ie. subfolder di folder utama repos.\nContoh dibawah ialah untuk memasukkan folder harbor ke dalam folder themes di folder utama. Subfolder public pula ialah submodule dari repo blog di Github.\n# themes git submodule add https://github.com/matsuyoshi30/harbor.git themes/harbor # yusbk.github.io master branch git submodule add -b master git@personal:yusbk/yusbk.github.io.git public # update git submodule init git submodule update --remote --merge Untuk update submodule pakai komando di bawah. Penting commit submodule dahulu kemudian commit parent repo sebelum push dari parent repos. Caranya:\ncd public git commit -am \u0026#39;Tambah pertukaran di public submodule\u0026#39; cd .. git push origin master --recurse-submodules=on-demand Bila tambah fail baru, jangan lupa daftarkan fail tersebut dengan git add . sebelum pakai git commit. Sekiranya HEAD detaching dengan submodule boleh guna script ini untuk kembali ke MASTER. Rujukan di StackOverflow.\n#!/bin/bash echo \u0026#34;Building all submodules while checking out from MASTER branch.\u0026#34; git submodule update git submodule foreach git checkout master git submodule foreach git pull origin master Clone Untuk clone repo termasuk semua submodules di repo boleh guna:\ngit clone --recursive [URL to repo] Bila clone repos tanpa --recursive yang mempunyai submodules, folder-folder submodule akan hanya kosong. Untuk dapatkan isi kandungan submodels tersebut harus larikan komando:\ngit submodule update --init ## sekiranya ada nested submodules git submodule update --init --recursive git submodule update --rebase --merge Sekiranya masih kosong, boleh letak --recursive disebabkan nested submodules ../themes/harbor. Bila sudah selesai pasang aturcara, bolehlah kemaskini submodule dengan fetch/pull.\n# pull all changes in the repo including changes in the submodules git pull --recurse-submodules # pull all changes for the submodules git submodule update --remote Sekiranya masih tidak berhasil, padamkan folder submodule harbor dan larikan semua komando:\ngit submodule set-url themes/harbor https://github.com/matsuyoshi30/harbor.git git submodule sync git submodule update --rebase --remote --merge --recursive Sekiranya HEAD detached, boleh coba checkout master dan pull semula. Cara seperti diatas,\ngit submodule foreach git checkout master git submodule foreach git pull origin master Atau buat pull request dengan cara:\ncd public git push origin HEAD:refs/heads/37f62cf Nombor 37f62cf ialah contoh rujukan HEAD semasa dari GitHub commit.\nCoba tukar branch ke master.\ngit checkout master Kekunci ssh Sekiranya ingin pakai kekunci ssh boleh tukar di file config di:\n .git/config  [submodule \u0026#34;public\u0026#34;] # url = https://github.com/yusbk/yusbk.github.io.git url = git@personal:yusbk/yusbk.github.io.git  .git/module/public/config  [remote \u0026#34;origin\u0026#34;] # url = https://github.com/yusbk/yusbk.github.io.git url = git@personal:yusbk/yusbk.github.io.git fetch = +refs/heads/*:refs/remotes/origin/* "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2020/06/15/basic-drake/",
                "title": "Basic use of drake",
                "section": "post",
                "date" : "2020.06.15",
                "body": "There are various ways to organise your R workflow. If you are working with a big project, then Airflow might be for you. But for the majority of R project codes, drake package will fullfilled your need.\nHere is the basic use of drake. The example here will be using a simple collections of functions.\nfun1 \u0026lt;- function(x = globalenv()$x){ x + 2 } fun2 \u0026lt;- function(i = 3){ i * 10 } fun3 \u0026lt;- function(){ x1 = fun1() x2 = fun2(5) x1 + x2 } fun4 \u0026lt;- function(z = globalenv()$z){ x1 = 1 + z x2 = fun2(2) x3 = fun3() x1 + x2 + x3 } Install drake development version in Github here.\nremotes::install_github(\u0026#34;ropensci/drake\u0026#34;) library(drake) x = 3 z = 5 plan \u0026lt;- drake_plan( output = fun4() ) make(plan) Running make(plan) will give the overview what is in the plan, sort of like using Make.\n▶ target x ▶ target z ▶ target output Then you can make the interactive network to see all the workflow. This can be done several ways.\nlibrary(\u0026#34;visNetwork\u0026#34;) vis_drake_graph(plan, full_legend = TRUE) ## need networkD3 package library(networkD3) sankey_drake_graph(plan) library(ggraph) drake_ggraph(plan) ## To show only target and dependency plot(plan) ## read the build target readd(output) This how it looks like using vis_drake_graph. For interactive can be seen here.\n  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2020/06/14/git-fork/",
                "title": "git fork",
                "section": "post",
                "date" : "2020.06.14",
                "body": "This is just 100% a copy from gist so I can check it when needed.\nSo you\u0026rsquo;ve cloned somebody\u0026rsquo;s repo from github, but now you want to fork it and contribute back. Never fear!\nTechnically, when you fork \u0026ldquo;origin\u0026rdquo; should be your fork and \u0026ldquo;upstream\u0026rdquo; should be the project you forked; however, if you\u0026rsquo;re willing to break this convention then it\u0026rsquo;s easy.\nOff the top of my head\n Fork their repo on Github In your local, add a new remote to your fork; then fetch it, and push your changes up to it  git remote add my-fork git@github...my-fork.git git fetch my-fork git push my-fork Otherwise, if you want to follow convention:\n Fork their repo on Github In your local, rename your origin remote to upstream  git remote rename origin upstream  Add a new origin  git remote add origin git@github...my-fork  Fetch \u0026amp; push  git fetch origin git push origin "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2020/02/09/look-up-table/",
                "title": "Pemakaian lookup table",
                "section": "post",
                "date" : "2020.02.09",
                "body": "Lookup table dipakai untuk mempercepatkan proses dan mengelakkan pemakaian ifelse. Untuk mempercepatkan proses, ordered index untuk data.table harus dipakai.\nCara 1 Kode ini dipakai sekiranya ingin mendapakan nilai di lookup tabel yang berhampiran. Contohnya nilai 1.3730682 adalah berhampiran dengan nilai 1.35.\nsetDT(df1)[, ScoreLU := setDT(df2)[df1, ScoreLU , on = \u0026#34;DSCRpd\u0026#34;, roll = \u0026#34;nearest\u0026#34;]] Hasilnya seperti begini:\nDSCRpd Leverage TCB ScoreLU 1: 1.3730682 2.010122 -1590099.11 60 2: 1.0449597 2.680051 493370.85 30 3: 1.0311141 4.790531 21594.63 30 4: 1.3923007 3.279903 -499326.76 60 5: 1.6443938 3.853003 988780.79 70 6: 0.6265976 1.814359 1003736.73 0 7: 2.1025253 4.412528 1245305.83 80 8: 1.2872873 2.074424 -688305.83 50 9: 0.5088294 2.504510 1406986.68 0 10: 1.7794307 3.724905 1132513.33 70 Cara ini ialah untuk mendapakan nilai ScoreLU yang terdapat di data ScoreLU melalui kolom kekunci DSCRpd dikedua-dua data.table. Sekiranya nilai di DSCRpd di df1 tidak sama dengan ScoreLU, kekunci yang berhampiran dirujuk untuk mendapatkan nilai ScoreLU. Contohnya:\ndf1 DSCRpd Leverage TCB 1 1.3730682 2.010122 -1590099.11 2 1.0449597 2.680051 493370.85 3 1.0311141 4.790531 21594.63 4 1.3923007 3.279903 -499326.76 ScoreLU ScoreLU DSCRpd Leverage TCB 1: 0 0.65 5.0 0 2: 10 0.80 4.5 100000 3: 20 0.95 4.0 250000 4: 30 1.10 3.5 500000 5: 40 1.20 3.0 850000 6: 50 1.26 2.5 1250000 7: 60 1.35 2.0 1700000 Untuk dapatkan nilai ScoreLU bagi kekunci DSCRpd 1.3730682 di df1 ialah 60 kerana nilai DSCRpd yang berhapiran di data ScoreLU ialah 1.35.\nCara 2 Cara ini sama seperti di atas cuma diterangkan secara mudah. Untuk menunjukkan cara ini kita buatkan data sebagai contoh:\nDT \u0026lt;- data.table(V1=c(0L,1L,2L), V2=LETTERS[1:3], V4=1:12) Untuk tukarkan V1 dari nilai c(1,2) ke nilai c(0,1) atau tukar huruf, caranya:\nDT[.(V1 = 1:2, to = 0:1), on = \u0026#34;V1\u0026#34;, V1 := i.to] DT[.(V2 = LETTERS[1:3], to = c(\u0026#34;T\u0026#34;, \u0026#34;K\u0026#34;, \u0026#34;D\u0026#34;)), on = \u0026#34;V2\u0026#34;, V2 := i.to] Di sini .(V1 = 1:2, to = 0:1) ialah sebagai table rujukan. Sekiranya rujukkan (lookup table) tidak tersedia, boleh di buat berasingan:\nlut1 \u0026lt;- data.table(V1 = 1:2, to = 0:1) lut2 \u0026lt;- data.table(V2 = LETTERS[1:3], to = c(\u0026#34;T\u0026#34;, \u0026#34;K\u0026#34;, \u0026#34;D\u0026#34;)) lut1 V1 to 1: 1 0 2: 2 1 lut2 V2 to 1: A T 2: B K 3: C D Kemudian bolehlah di update joins data:\nDT[lut1, on = \u0026#34;V1\u0026#34;, V1 := i.to] DT[lut2, on = \u0026#34;V2\u0026#34;, V2 := i.to] Cara ini diambil dari stackoverflow.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/09/02/package-r/",
                "title": "Pasang pakej di R",
                "section": "post",
                "date" : "2019.09.02",
                "body": "Ini ialah beberapa penggunaan asas R yang amat berguna walaupun jarang dipakai. Antaranya:\nPasang pakej Cara biasa untuk pasang pakej ialah menggunakan install.packages(). Tetapi sekiranya ingin memasang banyak pekej secara serentank dan memuatkan di R setelah pakej dipasang, cara begini boleh dipakai:\nlist.of.packages \u0026lt;- c(\u0026#34;leaflet\u0026#34;,\u0026#34;ggplot2\u0026#34;,\u0026#34;dplyr\u0026#34;,\u0026#34;gridExtra\u0026#34;,\u0026#34;psych\u0026#34;,\u0026#34;data.table\u0026#34;,\u0026#34;sf\u0026#34;,\u0026#34;ggrepel\u0026#34;) new.packages \u0026lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,\u0026#34;Package\u0026#34;])] if(length(new.packages)) install.packages(new.packages, repos = \u0026#34;https://cloud.r-project.org/\u0026#34;) sapply(list.of.packages, require, character.only = TRUE) Untuk pasang satu pakej boleh juga buat sebegini:\nif(!require(\u0026#34;rreg\u0026#34;)) {install.packages(\u0026#34;rreg\u0026#34;)} else {require(\u0026#34;rreg\u0026#34;)} Cara ini akan periksa sekiranya pakej rreg belum dipasang makan akan dipasang, sekiranya sudah ada maka akan diaktifkan.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/08/21/row-delete/",
                "title": "Padamkan barisan (row)",
                "section": "post",
                "date" : "2019.08.21",
                "body": "Untuk memadamkan barisan di data.table menggunakan reference seperti penggunaan .SD masih belum dilaksanakan. Cara ini diambil dari perbincangan di GitHub data.table. Fungsi delete dibuat seperti begini:\ndelete \u0026lt;- function(DT, del.idxs) { # pls note \u0026#39;del.idxs\u0026#39; vs. \u0026#39;keep.idxs\u0026#39; keep.idxs \u0026lt;- setdiff(DT[, .I], del.idxs); # select row indexes to keep cols = names(DT); DT.subset \u0026lt;- data.table(DT[[1]][keep.idxs]); # this is the subsetted table setnames(DT.subset, cols[1]); for (col in cols[2:length(cols)]) { DT.subset[, (col) := DT[[col]][keep.idxs]]; DT[, (col) := NULL]; # delete } return(DT.subset); } Cara pemakaiannya ialah seperti dibawah. Barisan yang dibuang di DT memerlukan indeks barisan. Untuk dapatkan indeks untuk barisan yang ingin dipadakan boleh dibaca di baway tajuk duplikasi.\nDT \u0026lt;- delete(DT, del.idxs) "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/08/01/static-encrypt/",
                "title": "Static encrypting HTML",
                "section": "post",
                "date" : "2019.08.01",
                "body": "Cara ini diambil dari GitHub robinmoisson. Boleh baca disitu untuk cara selanjutnya. Antaranya:\nPemasangan NVM (Node Version Manager) diperlukan untuk memudahkan pemasangan Node.js dan program staticrypt. Curl diperlukan untuk dapatkan Node.js.\nUntuk memasang hanya NVM, boleh dibuat seperti dibawah atau dibaca di sini:\nsudo apt-get install curl curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash Kemudian harus reload environment sebelum memakai komando nvm:\nsource ~/.profile Kemudian boleh memasang versi Node. yang diingini, samapada versi LTS atau versi terbaru. Untuk memeriksa versi yang ada guna fungsi ls-remote :\nnvm ls-remote ... ... v10.15.2 (LTS: Dubnium) v10.15.3 (LTS: Dubnium) v10.16.0 (LTS: Dubnium) v10.16.1 (LTS: Dubnium) v10.16.2 (Latest LTS: Dubnium) ... ... v12.5.0 v12.6.0 v12.7.0 v12.8.0 Kemudian bolehlah memasang node.js yang diinginkan. Contohnya versi LTS terakhir:\nnvm install v10.16.2 Untuk memasang Node.js terus melalui PPA tanpa memansang NVM, boleh buat begini:\nsudo apt-get install curl curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - Kemudian staticrypt boleh dipasang dengan sudo :\nnpm install -g staticrypt Satu fail Bila ingin encryp hanya satu fail HTML boleh larikan:\nstaticrypt contoh.html mypassword Komando ini akan menghasilkan fail HTML contoh_encrypted.html. Untuk option lainnya boleh dibaca di rujukan. Contohnya untuk bagi nama baru:\nstaticrypt myfile.html mypassword -o \u0026#34;myfile_safe.html\u0026#34; -t \u0026#34;Tanya siapa?\u0026#34; -i \u0026#34;One click only\u0026#34; Akan menghasilkan file baru yang bernama myfile_safe.html dan bila dibuka untuk login akan bertanjuk Tanya siapa? dan di bawah tajuk tersebu tertulis One click only.\nSatu folder Untuk encrypt semua HTML fail di satu folder boleh buat begini:\nfind . -type f -name \u0026#34;*.html\u0026#34; -exec staticrypt {} mypassword \\; Semua fail-fail HTML di folder dimana komando dilarikan akan menjadi namafile_encrypted.html.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/07/31/loop-set/",
                "title": "Loop atau set di data.table",
                "section": "post",
                "date" : "2019.07.31",
                "body": "Secara umumnya penggunaan loop tidak disarankan di R kerana ianya akan mengunakan banyak memory dan memakan masa yang lambat. Akan tetapi data.table menperkenalkan fungsi set untuk mempercepatkan proses. Asasnya ialah sebegini:\nset(dt, i, j, value)  Contoh pemakainnya bila ingin menukarkan NA ke angka yang diinginkan sepert 99.\nfor (j in seq_len(ncol(DT))){ set(DT, which(is.na(DT[[j]])), j = j, value = 99) } Contoh lain bila ingin membersihkan whitespace disemua kolom di data.table boleh dibuat seperti begini. class dipastikan sebagai character dahulu, kerana sekiranya integer atau nummeric maka ia tidak valid.\nfor (j in seq_len(ncol(DT))){ if(class(DT[[j]]) == \u0026#39;character\u0026#39;) set(DT, j = j, value = trimws(DT[[j]])) } "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/07/30/geom-line/",
                "title": "Tips untuk guna geom_line",
                "section": "post",
                "date" : "2019.07.30",
                "body": "geom_line() sering digunakan untuk menunjukkan trend. Pengguaannya mudah tetapi untuk memastikan yang garisan akan bersambung, variabel di x haruslah jenis continuous. Fungsi ini boleh juga dipakai untuk data jenis category akan tetapi pendekatannya agak berlainan. Pembakaian cara biasa menyebabkan garisan tidak bersambung.\nKategori Cara ini ialah dengan memakai aes(group=1) untuk memastikan yang ggplot() tahu bahawa data point di x adalah dikumpulan yang sama dan garisan harus disambungkan. Contohnya:\nggplot(data, aes(x = kategoriVar, y = peratus, group = 1)) + geom_line() NA Antara sebab lain yang menjadikan geom_line() tidak bersambung ialah apabilah terdatap nilai NA atau missing data. Nilai ini harus dikeluarkan dari data agar barisan akan barsambung. Contohnya yang diambil dari StackOverflow.\nggplot(df) + geom_point(aes(x=time, y=observation), color=\u0026#34;grey\u0026#34;)+ geom_line(data=df[!is.na(df$prediction),],aes(x=time, y=prediction), color=\u0026#34;black\u0026#34;)+ geom_point(aes(x=time, y=prediction), color=\u0026#34;blue\u0026#34;) Untuk melihat bagaimana plot dengan nilai NA. Diambil dari gist.\nlibrary(ggplot2) set.seed(234) # Make some fake data mydata \u0026lt;- data.frame(x = 2000:2010, y = rnorm(11, 5, 2)) # First plot, all lines are connected correctly ggplot(mydata, aes(x, y)) + geom_line() # Now let\u0026#39;s make some of the values NA mydata[sample(1:nrow(mydata), 2, replace = FALSE),\u0026#34;y\u0026#34;] \u0026lt;- NA # Now plot the result with the new NAs introduced ggplot(mydata, aes(x, y)) + geom_line() # We should see a plot with disconnected lines "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/07/24/ifelse/",
                "title": "Pengunaan ifelse",
                "section": "post",
                "date" : "2019.07.24",
                "body": "Untuk menukarkan kode penggunaan ifelse adalah cara yang senang dipakai. Akan tetapi penggunaannya di base R memakai masa yang panjang terutama sekirannya melarikan di data yang besar. Ini kerana penggunaan ifelse di base terlebih dahulu menyusun data sebelum membuat pilihan.\nCara yang diterangkan disini ialah untuk pemakaian ifelse di data.table dan cara-cara lain yang diperkenalkan di pakej dplyr atau pakej yang lainnya.\nCara data.table Cara yang biasa di data.table ialah menggunakan teknik DT[i,j,by]. Contoh lain bila ingin menukarkan var2 kepada angka 2 sekiranya var1 ialah ja.\nDT[var1 == \u0026#34;ja\u0026#34;, var2 := 2] Contoh di bawah menggunakan cara piping dengan magrittr.\nispDT[, ispad2 := 0] %\u0026gt;% .[alder \u0026gt;= 10 \u0026amp; diagVar \u0026gt;= 2, ispad2 := 1] %\u0026gt;% .[alder \u0026lt; 10 \u0026amp; diagVar \u0026gt;= 5, ispad2 := 1] Sekiranya ingin menukarkan pelbagai nilai di var1 contohnya ja = 1 dan nei = 2 di var2 boleh juga dibuat seperti cara begini menggunakan prinsip di SQL:\nDT[.(var1 = c(\u0026#34;ja\u0026#34;, \u0026#34;nei\u0026#34;), to = 1:2), on = \u0026#34;var1\u0026#34;, var2 := i.to] Pengunaan set juga disarankan untuk mempercepatkan proses di data.table sekiranya ingin memakai loop. Contoh bila ingin menukarkan semua kolom yang menggandungi angka 3 atau 5 kepada nilai NA boleh dibuat seperti begini:\nfor(j in seq_along(DT)) { set(DT, i=which(DT[[j]] %in% c(3,5)), j=j, value=NA) } Cara yang lebih advance boleh dibaca di Stack Overflow. Ringkasan penerangan cara ini:\nWe specify the \u0026lsquo;selectedcols\u0026rsquo; in .SDcols, grouped by sequence of rows, we unlist the Subset of Data.table (unlist(.SD)), get the index of the first non-NA value (\u0026lsquo;j1\u0026rsquo;), use that to get the \u0026lsquo;v1\u0026rsquo; corresponding to the index and the column names, assign (:=) to create two new columns.\nAim is to get the best value for each row which is the value of the first non-NA column in the given order of selected columns.\nlibrary(data.table) library(magrittr) n \u0026lt;- 7 set.seed(1234) dt \u0026lt;- sample.int(100, n*5, replace = TRUE) %\u0026gt;% ifelse(. \u0026lt; 35, NA, .) %\u0026gt;% matrix(, nrow = n) %\u0026gt;% as.data.table() selected_cols \u0026lt;- c(\u0026#34;V3\u0026#34;, \u0026#34;V4\u0026#34;, \u0026#34;V1\u0026#34;) dt[, c(\u0026#34;best_val\u0026#34;, \u0026#34;best_col\u0026#34;) := {v1 \u0026lt;- unlist(.SD) j1 \u0026lt;- which(!is.na(v1))[1] list(v1[j1], names(.SD)[j1]) }, .SDcols = selected_cols, by = 1:nrow(dt)] dt # V1 V2 V3 V4 V5 best_val best_col #1: NA NA NA NA 84 NA NA #2: 63 67 84 NA NA 84 V3 #3: 61 52 NA NA 46 61 V1 #4: 63 70 NA NA NA 63 V1 #5: 87 55 NA 82 NA 82 V4 #6: 65 NA NA 53 51 53 V4 #7: NA 93 NA 92 NA 92 V4 Cara dplyr Menggunakan fungsi ifelse dimana ianya lebih cepat dari base R ifelse. Penerangan lanjut boleh dibaca di blog Holly Emblem.\nispDT[, ispad1 := 0] ispDT[, ispad1 := dplyr::if_else(alder \u0026gt;=10 \u0026amp; diagVar \u0026gt;=2, 1, 0)] ispDT[, ispad1 := dplyr::if_else(alder \u0026lt; 10 \u0026amp; diagVar \u0026gt;=5, 1, ispad1)] "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/07/24/aliran-kerja/",
                "title": "Aliran kerja buat kod R",
                "section": "post",
                "date" : "2019.07.24",
                "body": " Data asal Pemeriksaan Pembetulan tambahan  Bila menjalankan pembersihan dan penyusunan data adalah disarankan untuk membuat nota-nota mengenai langkah-langkah yang diambil dalam menyelesaikan kerja. Ini adalah sebagai nasihat berkenaan dengan aliran kerja yang boleh dibuat supaya rujukan akan lebih jelas dan senang untuk dipakai beberapa kali.\nBahagikan kerja-kerja menyusun dan membersikan data kepada bahagian seperti berikut:\n Data asal (raw data) Pemeriksaan (validation) Pembetulan tambahan (additional info.)  Data asal Bahagian ini ialah berkaitan dengan kerja-kerja secara langusung dari data asal. Dimana data tersebut diambil dan sekiranya terdapat kerja-kerja menggabungkan dengan data-data lain. Selain itu pembersihan teknikal seperti kode yang salah.\nPemeriksaan Ini adalah kumpulan kerja-kerja berkaitan dengan pemeriksaan data. Contohnya umur yang melebihi 150 tahun atau ketinggian 3 meter. Adakah informasi tersebut betul atau kesalahan semasa pendaftaran data.\nPembetulan tambahan Data juga boleh bertukar disebabkan informasi tambahan yang diberikan selepas kerja-kerja pembersihan dari data asal dan pemeriksaan data yang tidak logik dibuat. Kebanyakkan pembetulan yang dibuat di sini dijalankan secara manual dan berasaskan kepada informasi tambahan yang tidak terdapat di data asal.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/06/24/vector-object/",
                "title": "Dapatkan objekt sebagai vektor",
                "section": "post",
                "date" : "2019.06.24",
                "body": "Untuk menggunakan pelbagai objekt tanpa mengulangi komando beberapa kali boleh dilakukan semada menggunakan loop atau salah satu cara apply. Masalahnya bila objekt-objekt disenaraikan sebagai vektor, objekt tersebut ditukarkan ke struktur chr. Oleh sebab itu objekt tersebut tidak dapat diproses seterusnya.\nSalah satu penyelesaian masalah ini ialah menggunakan sapply. Akan tetapi ianya bergantung dengan penggunaan argument:\n- `USE.NAME = TRUE`. - `get()`  Contohnya, bila ingin menggunakan objekt2 ini di .GlobalEnv:\ndt2000 dt2001 dt2002 dt2013 dt2014  Untuk dapatkan semua objekt-objekt diatas, boleh dikumpulkan menggunakan vector seperti begini:\nobjAll \u0026lt;- grep(\u0026#34;^(dt200|dt201)*$\u0026#34;, ls(), ignore.case = TRUE, value = TRUE) objAll [1] \u0026#34;dt2000\u0026#34; \u0026#34;dt2001\u0026#34; \u0026#34;dt2002\u0026#34; \u0026#34;dt2013\u0026#34; \u0026#34;dt2014\u0026#34; Untuk mencapai objekt2 itu melalui objAll, boleh menggunakan sapply.\nsapply(objAll, function(x) setDT(get(x)), USE.NAMES = TRUE) Atau untuk menggunakan fungsi lain:\n## Convert til excel indK \u0026lt;- grep(\u0026#34;^dt200\u0026#34;, ls(), value = TRUE) pathXL \u0026lt;- \u0026#34;~/Git-work/bdr/rapport/portal/excel/\u0026#34; sapply(indK, function(x) write.xlsx(get(x), paste0(pathXL, x, \u0026#34;.xlsx\u0026#34;)), USE.NAMES = TRUE) Komando diatas menukarkan semua object di objAll ke data.table. Tanpa memakai USE.NAMES komando ini tidak akan berhasil kerana vector di objAll dibaca sebagai character. Selain itu penggunaan get juga penting untuk memastikan yang kandungan di objAll mempunyai nilai.\nContoh komando untuk dapatkan semua nama kolom sykehus di semua data.table. Penggunaan \\\\b diawal dan akhir perkataan ialah untuk menetapkan nama kolom betul-betul hanya sykehus tanpa tambahan contohnya inn_sykehus atau sykehus_2\nsapply(objAll, function(x), grep(\u0026#34;\\\\bsykehus\\\\b\u0026#34;, names(get(x)), ignore.case = TRUE, value = TRUE), USE.NAMES = TRUE) "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/02/25/peta-sf/",
                "title": "Buat peta cara sf",
                "section": "post",
                "date" : "2019.02.25",
                "body": "Untuk membuat peta menggunakan R boleh memakai pelbagai jenis pakej. Cara yang senang ialah samada cara sp atau sf. Penerangan di sini menggunakan cara sf. Untuk mengikuti cara ini, pakej-pekej di bawah perlu dipasangkan terlebih dahulu.\nlist.of.packages \u0026lt;- c(\u0026#34;ggplot2\u0026#34;,\u0026#34;dplyr\u0026#34;,\u0026#34;sf\u0026#34;,\u0026#34;ggrepel\u0026#34;) new.packages \u0026lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,\u0026#34;Package\u0026#34;])] if(length(new.packages)) install.packages(new.packages) sapply(list.of.packages, require, character.only = TRUE) kart_sf = sf::st_read(\u0026#34;~/Git-personal/Rujukan-R/norge/NOR_adm1.shp\u0026#34;, stringsAsFactors = FALSE) class(kart_sf) Sekiranya ada masalah memasang pekej sf di Ubuntu disebabkan masalah di gdal-config, pasangkan libgdal-dev diterminal.\nsudo apt install libgdal-dev kemudian bolehlah pasangkan pakej sf dengan install.packages('sf').\nSekiranya masalah disebabkan oleh libudunits2-0 dan libudunits2-dev, pasangkan libudunits2-0 dan libudunits2-dev di terminal.\nsudo apt install -y libudunits2-0 libudunits2-dev "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2019/01/20/tetapkan-path/",
                "title": "Tetapkan PATH",
                "section": "post",
                "date" : "2019.01.20",
                "body": " Ubuntu Windows  Bila ingin memakai program di Ubuntu atau Windows melalui terminal, perlu daftarkan program tersebut di PATH. Disini saya terangkan caranya di Ubuntu dan Windows.\nUbuntu Bila pasang program di Ubuntu melalui source boleh tetapkan dimana program disimpan melalui penetapkan --prefix bila melarikan ./configure. Cara biasa bila pasang program dari source ialah:\n./configure make make install Bila ./configure tidak menetapkan prefix secara tidak langsung komando yang dipakai ialah ./configure --prefix=/usr/local dimana folder /usr/local dipakai untuk menyimpan fail-fail berkaitan program yang dipasang. Biasanya fail untuk larikan program akan disimpan seterusnya di folder bin, libraries di folder lib, manual di folder man dan seterusnya.\nUntuk tetapkan folder semasa memasng program dari source boleh buat begini:\n./configure --prefix=$HOME/local # atau ./configure --prefix=/home/ybk Bila menetapkan prefix selain dari /usr/local seperti di atas, perlu tetapkan folder tersebut di $PATH agar Ubuntu dapat melarikan program yang ingin dipakai. Untuk periksa folder-folder yang sudah ditetapkan boleh pakai:\n\u0026gt; echo $PATH /home/ybk/.local/bin:/home/ybk/bin:/home/ybk/.local/bin:/usr/local/games:/snap/bin:/usr/local/stata Penetapan folder di $PATH boleh dibuat dengan cara di bawah. Cara ini akan memasukkan PATH di fail /.profile atau /.bashrc.\n\u0026gt; export PATH=\u0026#34;$PATH:/path/folder\u0026#34; Bila melarikan komando export penetapan di $PATH hanya sementara dan hilang bila mematikan komputer. Untuk memasukan folder yang ditetapkan di --prefix ke $PATH selama-lamanya, harus larikan:\nsource ~/.profile # atau source ~/.bashrc Sekiranya tidak menetapkan di $PATH boleh juga menggunakan symlink\nsudo ln -s /path/ke/folder/baru/ ~/bin Windows Cara daftarkan PATH untuk .exe program bergantung samada kita memiliki administrator right atau tidak. Cara yang ditunjukkan disini ialah disituasi tanpa admin right.\nKita boleh lihat semua program-program yang didaftarkan di PATH dengan melarikan arahan di bawah di power shell atau terminal:\necho %PATH% Sekiranya tidak pasti bagimana untuk membuka terminal, tulis di search samada cmd atau powershell.\nKemudian buka control panel [kontrolpanel] \u0026gt; user [brukerkontoer] \u0026gt; environment variable [miljøvariablene]\nWindow baru akan dibuka dan pilih Variable \u0026gt; Path \u0026gt; edit \u0026gt; new.\nMasukkan path program yang menggandungi .exe. Penting tidak memasukkan nama fail .exe, cuma path ke fail tersebut sahaja. Contohnya:\nC:\\Program Files\\R\\R-4.0.0\\bin "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/10/15/nvim-termux/",
                "title": "Pasang R di HP",
                "section": "post",
                "date" : "2018.10.15",
                "body": "Peringatan Pasang nvim guna Termux di handphone.\n Termux pasang git Nvim-Rq F2 volume-up+2 Buat init.vim Pasang R cara senang    "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/08/16/duplikasi/",
                "title": "Duplikasi data atau unik",
                "section": "post",
                "date" : "2018.08.16",
                "body": "Cari mendapatkan unik data atau penduaan menggunakan data.table. Caranya hampir sama dengan cara di base. Disini akan diterangkan cara pemakaian fungsi unique dan duplicated.\nUnik Untuk mendapatkan barisan yang unik di dataset atau unik di kolom tertentu sahaja boleh menggunakan fungsi unique atau !duplicated. Tunjukajar ini akan menggunakan data contoh di bawah:\nlibrary(data.table) dat \u0026lt;- data.table(a = c(12, 15,16, rep(11:12, 2),15, rep(12,3), 17, 17, 18), b = c(\u0026quot;h\u0026quot;,NA,letters[1:8],\u0026quot;e\u0026quot;, \u0026quot;s\u0026quot;, rep(\u0026quot;q\u0026quot;,2))) \u0026gt; dat a b 1: 12 h 2: 15 \u0026lt;NA\u0026gt; 3: 16 a 4: 11 b 5: 12 c 6: 11 d 7: 12 e 8: 15 f 9: 12 g 10: 12 h 11: 12 e 12: 17 s 13: 17 q 14: 18 q  Barisan ke 10 12 h dan 11 12 e berpendua.\nFungsi unique di data.table akan memilih barisan-barisan yang unik sahaja. Sekiranya ingin menyusun mengikut abjad atau nombor, boleh tetapkan setkey(). Fungi uniqueN() memberikan jumlah barisan yang unik.\n\u0026gt; setkey(dat, a) \u0026gt; unique(dat) a b 1: 11 b 2: 11 d 3: 12 h 4: 12 c 5: 12 e 6: 12 g 7: 15 \u0026lt;NA\u0026gt; 8: 15 f 9: 16 a 10: 17 s 11: 17 q 12: 18 q \u0026gt; uniqueN(dat) [1] 12  Data hanya tinggal 12 barisan sahaja sebab 12 h di barisan 10 dan 12 e di barisan 11 berpendua dan penduaanya dikeluarkan. Hanya barisan 3 dan 5 sahaja yang disimpan.\nUntuk memilih barisan berdasarkan nilai unik di kolom tertentu, boleh menggunakan fungsi !duplicated. Penggunaan unique akan hanya memberikan nilai-nilai unik sebagai vektor. Akan tetapi penggunaan unique cara data.table memberikan nilai yang tidak diingini kerana unique tidak dipakai bila menggunakan pendekatan awam data.table iaitu DT[i,j,by]. Ia hanya dipakai menggunakan expression cara unique().\n\u0026gt; unique(dat$a) [1] 11 12 15 16 17 18 \u0026gt; dat[!duplicated(a)] a b 1: 11 b 2: 12 h 3: 15 \u0026lt;NA\u0026gt; 4: 16 a 5: 17 s 6: 18 q \u0026gt; dat[unique(a)] a b 1: 16 a 2: 17 s 3: NA \u0026lt;NA\u0026gt; 4: NA \u0026lt;NA\u0026gt; 5: NA \u0026lt;NA\u0026gt; 6: NA \u0026lt;NA\u0026gt;  Duplikasi Untuk mencari duplikasi boleh menggunakan fungsi duplicated atau unique yang terdapat di base. Kedua-duanya akan memberikan vektor. Fungsi duplicated akan memberikan TRUE FALSE manakala unique memberikan data pendua.\nData.table juga menggunakan duplicated atau unique untuk mendapatkan duplikasi. Untuk mengenalpasti semua data yang ada penduanya bolehlah membuat kolom baru yang menetapkan barisan yang berpendua:\n\u0026gt; dat[, fD := .N \u0026gt; 1, by = dat] \u0026gt; dat a b fD 1: 12 h TRUE 2: 15 \u0026lt;NA\u0026gt; FALSE 3: 16 a FALSE 4: 11 b FALSE 5: 12 c FALSE 6: 11 d FALSE 7: 12 e TRUE 8: 15 f FALSE 9: 12 g FALSE 10: 12 h TRUE 11: 12 e TRUE 12: 17 s FALSE 13: 17 q FALSE 14: 18 q FALSE  Untuk melihat kolom tertentu yang berpendua boleh dibuat seperti cara dibawah dimana kolom a dipilih dan semua yang berpendua di kolom tersebut dibariskan:\ndat[duplicated(a)|duplicated(a, fromLast = TRUE), list(dd=sort(a))] dd 1: 11 2: 11 3: 12 4: 12 5: 12 6: 12 7: 12 8: 12 9: 15 10: 15 11: 17 12: 17 Penggunaan fromLast=TRUE ialah untuk mendapatkan barisan terakhir yang berpendua. Sekiranya hanya memakai fromLast=TRUE barisan berpendua yang pertama tidak dikira.\nKekunci Sekiranya ingin membuang semua yang berpendua berasaskan kekunci boleh dibuat seperti contoh dibawah. Contoh ini diambil dari StackOverflow. Cara ini hanya akan berfungsi selepas menetapkan kekunci di data.table dengan setkey atau setkeyv.\nlibrary(data.table) myDT \u0026lt;- fread( \u0026#34;id,fB,fC 1, b1,c1 2, b2,c2 3, b1,c1 4, b3,c3 5, b1,c1 \u0026#34;) ## Tetapkan kekunci setkeyv(myDT, c(\u0026#39;fB\u0026#39;, \u0026#39;fC\u0026#39;)) Untuk dapatkan barisan berpendua berasaskan kekunci fB dan fC.\ndups = duplicated(myDT, by = key(myDT)); myDT[, fD := dups | c(tail(dups, -1), FALSE)] #shift dups to 1 position ie. -1 ## Cara lama dan agak lambat myDT[, fD := .N \u0026gt; 1, by=key(myDT)] ## hasilnya myDT id fB fC fD 1: 1 b1 c1 TRUE 2: 3 b1 c1 TRUE 3: 5 b1 c1 TRUE 4: 2 b2 c2 FALSE 5: 4 b3 c3 FALSE Indeks barisan Kadang-kadang kita hanya ingin dapatkan indeks barisan yang berpendua tanpa perlu mendapatkan data. Cara ini memerlukan fungi which. Contohnya:\n\u0026gt; which(duplicated(dat)) [1] 10 11 Untuk menggunakan pendekatan cara data.table adalah seperti dibawah. Cara pertama dan kedua hanya memberikan index barisan terakhir atau pertama yang berpendua manakala cara ketiga memberikan semua barisan yang berpendua.\n\u0026gt; dat[duplicated(dat), which=TRUE] [1] 10 11 ## Penggunaan fromLast \u0026gt; dat[duplicated(dat, fromLast=TRUE), which=TRUE] [1] 1 7 ## Atau utk dapatkan semua barisan yang berpendua \u0026gt; dat[duplicated(dat)|duplicated(dat, fromLast=TRUE), which=TRUE] [1] 1 7 10 11  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/07/25/encrypting-file/",
                "title": "Encrypting guna EncFS",
                "section": "post",
                "date" : "2018.07.25",
                "body": "Untuk meng-encrypt guna EncFS dan meletakkan fail-fail di Dropbox boleh dibuat seperti begini:\nPerlu pasang program EncFS\n$ sudo apt-get install encfs  Kemudian gunakan program EncFS dengan menetapkan folder yang akan di encrypt. Caranya:\n$ encfs ~/Dropbox/.encrypted ~/Private  Ini akan membuat dua directori, dimana folder di Dropbox ialah tempat fail-fail encrypted disimpan. Folder Private ialah untuk menyapai fail-fail yang di decrypted. EncFS akan meminta untuk membuat kata kekunci dan bila diminta untuk tetapkan jenis kekunci, pilih \u0026ldquo;p\u0026rdquo; untuk paranoia mode sudah memadai.\nUntuk peringatan:\n Jangan letakkan sebarang fail di folder yang simpan di Dropbox. Fail-fail hanya disimpan di folder Private yang kemudiannya di kemaskinikan secara automatik ke folder di Dropbox untuk di encrypt. Jangan buang fail .encfs.xml  Untuk unmount folder yang di-encrypt, larikan:\n$ fusermount -u ~/Private  Untuk dapatkan fail-fail yang di encrypt, larikan:\n$ encfs ~/Dropbox/.encrypted ~/Private  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/07/02/basic-shiny/",
                "title": "Cara deloy Shiny",
                "section": "post",
                "date" : "2018.07.02",
                "body": " Menggunakan runApp() Menggunakan shinyAppDir() Tips lain  Terdapat pelbagai cara untuk larikan Shiny App. Sebagai rujukan boleh dibaca di laman Shiny. Penggunaan fungsi runApp() dan shinyAppDir() akan diterangkan disini.\nMenggunakan runApp() Satu fail app.R Untuk menggunakan fungsi runApp(), cara yang senang digunakan ialah dengan menyediakan fail app.R. Fail ini harus mengandungi ui dan server. Contohnya:\nlibrary(shiny) ui \u0026lt;- fluidPage() server \u0026lt;- function(input, output) {} shinyApp(ui = ui, server = server) Sekiranya menggunakan program RStudio maka butang Run App akan keluar dan boleh digunakan untuk melarikan app. Sekiranya mengunakan program lain contohnya Emacs ESS maka boleh larikan dengan cara :\nlibrary(shiny) runApp(\u0026#34;app.R\u0026#34;) Pelbagai fail di folder Sekiranya app mengandungi kod yang panjang dimana ui dan server di letakkan di fail-fail berasingan, fail-fail ini harus diletakkan di folder sendiri bersama dengan fail-fail lain contohnya global.R, data.R atau module.R termasuk folder www. Fungsi shinyApp() tidak diperlukan untuk melarikan app ini. Penggunaan runApp() boleh digunakan dengan menetapkan nama folder dimana fail-fail tersebut diletakkan. Contohnya isi kandungan di folder myApp\n/home/Git/myApp/ ├── data.R ├── global.R ├── server.R ├── ui.R └── www └── custom.css Folder www digunakan untuk menyimpan elemen-element lain seperti gambar, javaScript, CSS dan lain-lainnya. Untuk melayarkan app boleh dilakukan pelbagai cara. Antaranya:\nlibrary(shiny) runApp(\u0026#34;myApp\u0026#34;) Sekiranya Shinyapps dibuat sebagai object.\napp \u0026lt;- shinyApp(ui = ui, server = server) runApp(app) Atau hanya terus melarikan app di console tanpa mengunakan runApp\napp \u0026lt;- shinyApp(ui = ui, server = server) app Menggunakan shinyAppDir() Melarikan app dengan menetapkan folder sekiranya folder tidak terletak di folder yang sedang digunakan.\nTips lain Sekiranya ingin dapatkan clientData boleh menggunakan session. Contohnya:\nfunction(input, output, session) { output$txt \u0026lt;- renderPrint({ session$clientData }) } "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/06/24/tambah-kolom/",
                "title": "Tambah kolom pelbagai data.table",
                "section": "post",
                "date" : "2018.06.24",
                "body": "Untuk menambah kolom baru di data.table boleh menggunakan :=. Sekiranya ingin membuat kolom baru secara loop di pelbagai data.table, cara begini boleh dibuat. Cara-cara ini diambil dari StackOverflow.\nList Cara pertama boleh dibuat dengan mebuat list untuk semua data.table dimana kolom baru ingin ditambah.\nlibrary(data.table) my_dts \u0026lt;- list ( centro = data.table(x=letters[1:5], y = 1:5), sur = data.table(x=letters[2:7], y = 3:8), norte = data.table(x=letters[2:10], y = 3:11) ) st \u0026lt;- c(\u0026#34;centro\u0026#34;, \u0026#34;sur\u0026#34;, \u0026#34;norte\u0026#34;) for (i in st) my_dts[[i]][, store := i] Sekiranya rawdata belum disatukan, boleh dilaksanakan seperti begini. Cara ini membaca semua data sebagai csv dan disatukan sebagai list.\nst \u0026lt;- c(\u0026#34;centro\u0026#34;, \u0026#34;sur\u0026#34;, \u0026#34;norte\u0026#34;) all_stores \u0026lt;- do.call( what = rbind, args = lapply( X = st, FUN = function(storeNM){ temp \u0026lt;- fread(input = paste0(storeNM, \u0026#39;.csv\u0026#39;)) temp[, store := storeNM] return(temp) } ) ) Vector Semua data.table yang disatukan ke vektor. Cara ini menggunakan fungsi assign dan get.\nfor (i in st){ assign(i, get(i)[, store := i]) } "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/02/21/grid/",
                "title": "Pemakaian pekej Grid",
                "section": "post",
                "date" : "2018.02.21",
                "body": "Pakej grid dipakai untuk membuat grafik secara asas membolehkan pemakaian aturcara dan peraturan yang lebih anjal mengikut kemahuan sendiri. Ia juga boleh dipakai untuk mengatur kedudukan grafik. Fungsi penting yang dipakai ialah:\n viewport pushViewport grid.draw  viewport dipakai untuk menetapkan kawasan grafik. Fungsi viewport() digunakan untuk tujuan ini. Contohnya:\nlibrary(grid) vp1 \u0026lt;- viewport(x = 0.5, y = 0.5, width = 0.2, height = 0.4, just = c(\u0026#34;left\u0026#34;, \u0026#34;bottom\u0026#34;), name = \u0026#34;vp1\u0026#34;) grid.show.viewport(vp1)   Figure 1: Grid view\n  Operasi ini bermaksud viewport diletakkan di tengah-tengah mukasurat melalui koordinasi x = 0.5 dan y = 0.5. Unit yang dipakai ialah npc atau \u0026ldquo;Normalised Parent Coordinates\u0026rdquo; yang menggunakan lokasi kiri bawah (0,0) dan kanan atas (1,1). Lebar dan tinggi juga ditetapkan dengan unit yang sama. Sekiranya ingin menukar unit boleh menggunakan cara unit(2, \u0026quot;cm\u0026quot;). Penggunaan just untuk menetapkan dimana koordinasi viewport sebelum meletakkan grob. Contoh di atas meletakkan titik koordinasi x dan y di bawah kiri c(\u0026quot;left\u0026quot;, \u0026quot;bottom\u0026quot;) grob.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/02/05/plot-table/",
                "title": "Plot dan table",
                "section": "post",
                "date" : "2018.02.05",
                "body": "Ini ialah aturaca membuat plot dan memasukkan table untuk informasi berkaitan plot menggunakan pakej ggplot2. Table untuk informasi juga akan dibuat menggunakan ggplot2 yang kemudiannya digabungkan menggunakan pakej gridExtra.\nUntuk memastikan plot dan table akan sejajar, adalah penting untuk menggunakan skala yang sama. Skala ini boleh menggunakan nombor atau kumpulan (category). Bila menggunakan skala secara category adalah penting untuk menukarkan status kolom ke factor.\nContoh data:\nlibrary(data.table) library(ggplot2) navn \u0026lt;- c(\u0026#34;Nama1\u0026#34;, \u0026#34;Nama2 yang panjang\u0026#34;, \u0026#34;Nama3\u0026#34;) N \u0026lt;- c(112, 210, 150) N2 \u0026lt;- c(200, 250, 170) dat \u0026lt;- data.table(navn, N, N2) Untuk memastikan kedua-dua plot akan menggunakan skala yang sama, kita boleh buat dummy untuk rujukkan skala. Disini rujukkan skala bermula dari nombor 1 ke nombor 3.\n## create dummy reference xrow \u0026lt;- nrow(dat) dat[, ref := seq.int(xrow)] Untuk membolehkan kita menambah perkataan contohnya Lokasi atau Negara, kita perlu tambah skala rujukkan. Bila guna fill=TRUE di fungsi rbindlist maka NA akan dimasukkan di kolom yang kosong.\n## create ref til extra text eg. N or Total xref \u0026lt;- data.table(ref = xrow + 1) #locate at the end of the rows dt \u0026lt;- rbindlist(list(dat, xref), fill = TRUE) #bind to the end rows Untuk mengelakkan NA akan dimasukkan diplot, maka kita perlu kosongkan NA. Kemudian kolom yang akan dipakai untuk menamakan plot dan rujukkan plot ditukarkan ke factor.\n## navn with NA blir tom dt[is.na(navn), navn := \u0026#34;\u0026#34;] ## konvertere dt$navn og dt$ref as facor dt[, `:=`(navn = as.factor(navn), ref = as.factor(ref))] Setelah menukarkan kolom ke factor bolehlah mendapatkan kandungan kolom tersebut yang dipakai untuk menamakan plot dengan cara membuat vector menggunakan fungsi levels. Untuk tidak memasukkan NA diskala, hanya nama yang ada di vector sahaja yang dipakai.\n## get levels for navn etter at den er konvertert til factor pnavn \u0026lt;- levels(dt$navn) dummyref \u0026lt;- factor(1:xrow) #brukes til scale_x_discrete for å legge labels til aksen eksludert dummy linje 4 som skal brukes senere til N Selepas itu bolehlah buat plot menggunakan rujukkan dummy dan memastikan yang ref dipakai secara factor.\n## plot etter at \u0026#34;ref\u0026#34; og \u0026#34;navn\u0026#34; er konvertert til factor (plotMain \u0026lt;- ggplot(dt, aes(factor(ref), N)) + geom_bar(stat = \u0026#34;identity\u0026#34;) + coord_flip() + scale_x_discrete(breaks = factor(dt$ref), labels = dt$navn) + theme( #theme react on the current plot for x and y axis not before it\u0026#39;s flip #after flip then navn is current y-axis axis.text.y = element_text(color = \u0026#34;blue\u0026#34;, size = 10, hjust = 1), axis.title.y = element_blank(), axis.line.y = element_blank(), #ta bort linje på y-axis axis.ticks.y = element_blank(), axis.line.x = element_line(color = \u0026#34;black\u0026#34;), panel.background = element_blank() )) ## plot tom ramme til tekst (rpp \u0026lt;- ggplot(dt, aes(factor(ref))) + scale_y_continuous(limits = c(0, 1)) + coord_flip() + theme( axis.line = element_blank(), axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(), panel.background = element_blank() )) ## plot text figure (plotText \u0026lt;- rpp + annotate(\u0026#34;text\u0026#34;, x = factor(4), y = 0.25, label = \u0026#34;Local\u0026#34;) + annotate(\u0026#34;text\u0026#34;, x = factor(4), y = 0.75, label = \u0026#34;Nation\u0026#34;) + annotate(\u0026#34;text\u0026#34;, x = factor(dt$ref), y = 0.25, label = dt$N, hjust = 1) + annotate(\u0026#34;text\u0026#34;, x = factor(dt$ref), y = 0.75, label = dt$N2, hjust = 1) + geom_vline(xintercept = c(3.8, 4.2)) ) Untuk meletakkan plot dan table bersama boleh guna grid.arrange dari pakej gridExtra. Tetapi cara ini tidak memastikan yang y-aksis seragam.\nlibrary(gridExtra) (plotpp \u0026lt;- grid.arrange(ggplotGrob(plotMain), ggplotGrob(plotText), ncol = 2, widths = unit(c(0.8, 0.2), \u0026#34;npc\u0026#34;)) ) Untuk meletakkan kedua-dua plot dan table bersama dan memastikan yang y-aksis seragam boleh menggunakan cara seperti di bawah. Guna heights utk menyeragamkan aksis y manakala weights untuk menyeragamkan aksis x. Contohnya unit.pmax(pp1$weights)\npp1 \u0026lt;- ggplotGrob(plotMain) pp2 \u0026lt;- ggplotGrob(plotText) maxHeight = unit.pmax(pp1$heights, pp2$heights) pp1$heights \u0026lt;- maxHeight pp2$heights \u0026lt;- maxHeight grid.arrange(pp1, pp2, ncol = 2, widths = unit(c(0.8, 0.2), \u0026#34;npc\u0026#34;)) ggplot2::ggsave(\u0026#34;plottable1.svg\u0026#34;) Selain cara ini, boleh juga menggunakan fungsi plot_grid dari pakej Cowplot dan menggunakan align = \u0026quot;h\u0026quot; untuk horizontal (sama y-aksis)\nlibrary(cowplot) cplot \u0026lt;- plot_grid(plotMain, plotText, nrow = 1, align = \u0026#34;h\u0026#34;, rel_widths = c(4, 1)) cowplot::save_plot(\u0026#34;cowplot.svg\u0026#34;, cplot, ncol = 2, base_aspect_ratio = 1.3) cowplot::ggsave(\u0026#34;cowplot2.svg\u0026#34;, cplot) Hasilnya ialah seperti ini:\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/01/28/legend-plot-banding/",
                "title": "Legend untuk plot perbandingan",
                "section": "post",
                "date" : "2018.01.28",
                "body": "Tunjuk ajar ini ialah berasaskan penggunaan pekej ggplot2. Untuk membuat plot perbandingan dan memasukkan legend untuk perbandingan boleh dibuat seperti berikut.\nlibrary(\u0026#34;data.table\u0026#34;) data \u0026lt;- fread(\u0026#34;https://raw.githubusercontent.com/ybkamaleri/dataset/master/gdata.csv\u0026#34;) ## lage tabellen alder group ageWyoming \u0026lt;- data[location == \u0026#34;Wyoming\u0026#34;, list(n = .N), by = .(agegp)] dataW \u0026lt;- ageWyoming[, { N = sum(n) pros = round(n / N * 100, digits = 1) list(agegp = agegp, n = n, N = N, pros = pros)}] dataW[, location := \u0026#34;Wyoming\u0026#34;] ageRest \u0026lt;- data[location != \u0026#34;Wyoming\u0026#34;, list(n = .N), by = .(agegp)] dataR \u0026lt;- ageRest[, { N = sum(n) pros = round(n / N * 100, digits = 1) list(agegp = agegp, n = n, N = N, pros = pros)}] dataR[, location := \u0026#34;National\u0026#34;] data telah tersedia, bolehlah menyediakan plot yang diinginkan\nlibrary(\u0026#34;ggplot2\u0026#34;) ggplot(NULL, aes(agegp, pros)) + geom_bar(data = dataW, # color = local di aes utk buat lagend mapping = aes(color = \u0026#34;local\u0026#34;), stat = \u0026#34;identity\u0026#34;, fill = \u0026#34;lightblue\u0026#34;) + # point utk national geom_point(data = dataR, # fill eller color kan brukes som dummy for å produsere legend mapping = aes(fill = \u0026#34;National\u0026#34;), # om color brukes som dummy til å lage legend så kan color ikke brukes her # men spesifiseringen av farge gjøes i scale_color_manual(value = \u0026#34;red\u0026#34;) stat = \u0026#34;identity\u0026#34;, size = 7, shape = 18, color = \u0026#34;red\u0026#34;) + #shape 18 diamon og 19 rund # limits definere skale for y-aksen fra 0 til 50 # breaks gir delingen i skalen dvs. hver 10-ene # expand gjør at det ikke er mellomrom mellom figuren og x-aksen scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, 10), expand = c(0, 0)) + # Title, subtitle, x- og y-label labs(title = \u0026#34;Title something\u0026#34;, subtitle = \u0026#34;Subtitle for graph is here\u0026#34;, x = \u0026#34;x-label\u0026#34;, y = \u0026#34;y-label\u0026#34;) + # snu figuren coord_flip() + # warna utk lagend local scale_color_manual(values = \u0026#34;lightblue\u0026#34;) + # tema spesifikasjoner theme( legend.position = \u0026#34;top\u0026#34;, legend.title = element_blank(), legend.text = element_text(size = 10), legend.key = element_rect(color = \u0026#34;white\u0026#34;), axis.text.y = element_text(color = \u0026#34;black\u0026#34;, size = 9), plot.margin = unit(c(0,0.5,0,0), \u0026#34;cm\u0026#34;), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major.y = element_blank(), panel.grid.major.x = element_line(colour = \u0026#34;grey\u0026#34;, size = 0.4, linetype = 2), ## panel.grid.minor.x = element_line(colour = \u0026#34;grey\u0026#34;, size = 0.2, linetype = 2), axis.ticks.y = element_blank(), axis.line.x = element_line(size = 0.5), axis.title.y = element_text(size = 9), axis.title.x = element_text(size = 9)) Hasilnya seperti ini:\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/01/22/tambah-jumlah/",
                "title": "Tambah jumlah keseluruhan",
                "section": "post",
                "date" : "2018.01.22",
                "body": "Bagaimana untuk tambah garis baru di data.frame dengan memasukkan jumlah keseluruhan atau Total. Cara yang ditunjukkan di sini ialah dengan menggunakan pakej data.table. Fungsi rbind atau rbindlist boleh digunakan, tetapi cara rbindlist melalui pakej data.table lebih cepat.\nlibrary(data.table) df \u0026lt;- data.table(v1 = letters[1:10], v2 = 1:10) Contoh data\nhead(df, n=4) v1 v2 1: a 1 2: b 2 3: c 3 4: d 4  Cara yang paling singkat untuk meletakkan Jumlah di bawah data.frame ialah seperti begini:\n## cara rbindlist dfj \u0026lt;- rbindlist(list(df, list(\u0026#34;Jumlah\u0026#34;, dim(df)[1]))) ## Masukkan jumlah keseluruhan dfjs \u0026lt;- rbindlist(list(df, list(\u0026#34;Jumlah semua\u0026#34;, sum(df$v2)))) ## cara rbind dfjj \u0026lt;- rbind(df, list(\u0026#34;Jumlah\u0026#34;, dim(df)[1])) Hasilnya\nR\u0026gt; dfj v1 v2 1: a 1 2: b 2 3: c 3 4: d 4 5: e 5 6: f 6 7: g 7 8: h 8 9: i 9 10: j 10 11: Jumlah 10  Cara lain ialah dengan membuat data.frame baru dan kombinasikan dengan df\ndftot \u0026lt;- data.table(v1 = \u0026#34;Jumlah\u0026#34;, dim(df)[1]) dfcom \u0026lt;- rbindlist(list(df, dftot)) Hasilnya bila Jumlah dimasukkan di bawah data.frame\nR\u0026gt; dfcom v1 v2 1: a 1 2: b 2 3: c 3 4: d 4 5: e 5 6: f 6 7: g 7 8: h 8 9: i 9 10: j 10 11: Jumlah 10  Sekiranya ingin memasukkan informasi dibarisan tertentu boleh buat seperti begini:\n## Masukkan selepas barisan ke-3 rbindlist(list(df[1:3, ], as.list(c(\u0026#34;ZZ\u0026#34;, 6)), df[4:dim(df)[1], ])) ## atau rbindlist(list(df[1:3, ], list(\u0026#34;ZZ\u0026#34;, 6), df[4:dim(df)[1], ])) Barisan baru selepas barisan ke 3 dengan \u0026quot;ZZ\u0026quot; dan nombor 6 dimasukkan.\n v1 v2 1: a 1 2: b 2 3: c 3 4: ZZ 6 5: d 4 6: e 5 7: f 6 8: g 7 9: h 8 10: i 9 11: j 10  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/01/04/merge-join/",
                "title": "Merge atau join",
                "section": "post",
                "date" : "2018.01.04",
                "body": "Fungsi yang selalu dipakai bila mengemaskini dan menyusun data ialah penggunaan merge atau join. Cara biasa menggunakan teknik data frame ialah seperti begini:\nlibrary(data.table) DT1 = data.table(area=c(\u0026#39;US\u0026#39;, \u0026#39;UK\u0026#39;, \u0026#39;EU\u0026#39;, \u0026#39;Asia\u0026#39;), id=c(\u0026#39;c001\u0026#39;, \u0026#39;c002\u0026#39;, \u0026#39;c003\u0026#39;, \u0026#39;c004\u0026#39;), value=c(100, 200, 300, 400) ) DT2 = data.table(ID=c(\u0026#39;c001\u0026#39;, \u0026#39;c002\u0026#39;, \u0026#39;c003\u0026#39;), price=c(500, 200, 400), sales=c(20, 30, 15) ) DT1 menggandungi 4 baris dan DT2 hanya 3 baris\nR\u0026gt; DT1 area id value 1: US c001 100 2: UK c002 200 3: EU c003 300 4: Asia c004 400 R\u0026gt; DT2 ID price sales 1: c001 500 20 2: c002 200 30 3: c003 400 15  Guna fungsi \u0026lsquo;merge\u0026rsquo; Cara ini menggabungkan data.table menggunakan fungsi merge untuk menggabungkan kedua-dua data yang terdapat dikedua-duanya\n## Merge merge(DT1, DT2, by.x = \u0026#34;id\u0026#34;, by.y = \u0026#34;ID\u0026#34;) ## Merge data.frame merge.data.frame(DT1, DT2, by.x = \u0026#34;id\u0026#34;, by.y = \u0026#34;ID\u0026#34;)  id area value price sales 1 c001 US 100 500 20 2 c002 UK 200 200 30 3 c003 EU 300 400 15  Sekiranya ingin mendapatkan semua data dikedua-dua DT, boleh pakai argument all=TRUE atau hanya salah satu DT dengan all.x=TRUE.\nmerge(DT1, DT2, by.x = \u0026#34;id\u0026#34;, by.y = \u0026#34;ID\u0026#34;, all = TRUE) Gabungan menggunakan \u0026lsquo;key\u0026rsquo; Fungsi merge juga boleh digunakan dengan data.table. Cara lain untuk menggabungkan dua data menggunakan data.table ialah seperti begini:\nsetkey(DT1, id) setkey(DT2, ID) ## right outer sum1 \u0026lt;- DT1[DT2] sum2 \u0026lt;- DT2[DT1] sum1 hanya menyimpan data yang terdapat di D2 iaitu right outer manakala sum2 memasukkan semua ID yang terdapat di DT1 dan memasukkan NA sekiranya tanpa data\nR\u0026gt; sum1 area id value price sales 1: US c001 100 500 20 2: UK c002 200 200 30 3: EU c003 300 400 15 R\u0026gt; sum2 ID price sales area value 1: c001 500 20 US 100 2: c002 200 30 UK 200 3: c003 400 15 EU 300 4: c004 NA NA Asia 400 Untuk hanya menyimpan match yang terdapat dikedua-dua dataset, boleh guna argument nomatch=0.\nResultat \u0026lt;- DT1[DT2, nomatch = 0] Gabungan tanpa menukarkan data.table sedia ada Cara lain menggunakan data.table sekiranya key tidak ditetapkan. Untuk menyimpan hasilnya harus membuat objek atau data.table baru.\n## tetapkan key menggunakan \u0026#39;on DT12 \u0026lt;- DT1[DT2, on = c(id = \u0026#34;ID\u0026#34;)] DT21 \u0026lt;- DT2[DT1, on = c(ID = \u0026#34;id\u0026#34;)] Gabungan ke data.table sedia ada Sekiranya tidak ingan membuat objek baru dan hanya ingin memasukkan kolom ke data.table yang sedia ada, boleh pakai mget sekiranya pelbagai kolom yang ingin dimasukkan dan get untuk hanya satu kolom.\n## Cara get DT4 \u0026lt;- copy(DT1) var \u0026lt;- \u0026#34;price\u0026#34; DT4[DT2, on = c(id = \u0026#34;ID\u0026#34;), (var) := get(var)] ## Cara mget DT3 \u0026lt;- copy(DT1) vars \u0026lt;- c(\u0026#34;price\u0026#34;, \u0026#34;sales\u0026#34;) #nama kolom di DT2 DT3[DT2, on = c(id = \u0026#34;ID\u0026#34;), (vars) := mget(vars)] Keputusannya dengan memakai mget.\n\u0026gt; DT3 area id value price sales 1: US c001 100 500 20 2: UK c002 200 200 30 3: EU c003 300 400 15 4: Asia c004 400 NA NA Pelbagai data.table Fungi merge dipakai bila menggabungkan dua data.table sahaja. Untuk menggabungkan pelbagai data.table boleh menggunakan fungsi Reduce. Secara awamnya fungsi Reduce boleh dipakai seperti begini:\nReduce(merge, list(DT1, DT2, DT3, ...)) Tetapi sekiranya nama pada data.table yang ingin digabungkan tidak sama, maka pilihan all=TRUE harus dipakai supaya semua variable dimasukkan tidak kira ianya terdapat hanya di salah satu data.table atau semuanya. Untuk membolehkan all=TRUE option boleh dibuat secara pemakaian function:\nReduce(function(...) merge(..., all = TRUE), list(DT1, DT2, DT3, DT4)) Cara lain boleh juga membuat function diluar Reduce. Seperti begini:\nmymerge = function(x, y) merge.data.table(x, y, all = TRUE) Reduce(mymerge, list(DT1, DT2, DT3, DT4)) ## bila tidak ada key function(x, y) x[y, on = \u0026#34;nama_kolom\u0026#34;] Nama object di global Sekiranya ingin mendapatkan nama-nama object yang ingin digabungkan di global environment, boleh menggunakan fungsi mget. Contohnya untuk dapatkan semua objek yang diakhiri dengan .pas.\nobjBanyak \u0026lt;- mget(ls(pattern = \u0026#34;\\\\.pas$\u0026#34;)) Reduce(merge, objBanyak) "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2018/01/02/recode/",
                "title": "Recode atau compute data",
                "section": "post",
                "date" : "2018.01.02",
                "body": "Ini ialah cara untuk recode atau compute data menggunakan pakej data.table.\nRecode Mendukarkan nilai dikolom tanpa membuat kolom baru boleh dilakukan seperti begini. Contoh dataset yang digunakan untuk proses ini ialah DT.\nlibrary(data.table) DT \u0026lt;- data.table(a=rep(0:1, 5), b=letters[1:10]) \u0026gt; DT a b 1: 0 a 2: 1 b 3: 0 c 4: 1 d 5: 0 e 6: 1 f 7: 0 g 8: 1 h 9: 0 i 10: 1 j  Bagaimana untuk menukarkan kod di kolom a dari [0,1] ke [3,4]?\nCara dengan menggunakan pakej data.table ialah seperti begini:\nDT[.(a = 0:1, to = 3:4), on = \u0026#34;a\u0026#34;, a := i.to] Kolom a ditukarkan ke kod [3,4]. Pemakaian a := i.to untuk memastikan kolom a digantikan dengan nilai yang baru tanpa membuat kolom baru yang mengandungi nilai tersebut.\n\u0026gt; DT a b 1: 3 a 2: 4 b 3: 3 c 4: 4 d 5: 3 e 6: 4 f 7: 3 g 8: 4 h 9: 3 i 10: 4 j  Compute Membuat kolom baru berasaskan kondisi dikolom yang sedia ada. Contoh praktikal yang saya gunakan untuk memberikan nama-nama rumah sakit kolom baru iaitu hosKort.\nhosNavnKort \u0026lt;- c(\u0026#34;Akershus\u0026#34;, \u0026#34;Forde\u0026#34;, \u0026#34;Haugesund\u0026#34;, \u0026#34;Haukeland\u0026#34;, \u0026#34;Sandessjoen\u0026#34;, \u0026#34;Finnmark\u0026#34;, \u0026#34;Kristiansund\u0026#34;, \u0026#34;Molde\u0026#34;, \u0026#34;Namsos\u0026#34;, \u0026#34;Bodo\u0026#34;, \u0026#34;Trondheim\u0026#34;, \u0026#34;Stavanger\u0026#34;, \u0026#34;Vestfold\u0026#34;, \u0026#34;Gjovik\u0026#34;, \u0026#34;Lillehammer\u0026#34;, \u0026#34;Elverum\u0026#34;, \u0026#34;Levanger\u0026#34;, \u0026#34;Telemark\u0026#34;, \u0026#34;Ostfold\u0026#34;, \u0026#34;Arendal\u0026#34;, \u0026#34;Kristiansand\u0026#34;, \u0026#34;Ulleval\u0026#34;, \u0026#34;Nord_norge\u0026#34;, \u0026#34;Harstad\u0026#34;, \u0026#34;Drammen\u0026#34;, \u0026#34;Alesund\u0026#34;) # hosDT[, kortID := hospID] # hosDT[.(kortID = 1:26, to = hosNavnKort), on = \u0026#34;kortID\u0026#34;, hosKort := i.to] hosDT[.(hospID = 1:26, to = hosNavnKort), on = \u0026#34;hospID\u0026#34;, hosKort := i.to] Cara ini sama seperti melarikan cara begini:\nhosDT[hospID == 1, hosKort := \u0026#34;Akershus\u0026#34;][ hospID == 2, hosKort := \u0026#34;Forde\u0026#34;][ hospID == 3, hosKort := \u0026#34;Haugesund\u0026#34;][ dan seterusnya... ] Sekiranya asas untuk menghasilkan kolom baru bergantung kepada lebih dari satu kolom boleh dibuat seperti begini.\ndd1 \u0026lt;- data.table(a=rep(c(\u0026#34;Ja\u0026#34;, \u0026#34;Nei\u0026#34;), 5), b = rep(letters[1:3],2)) Buat kolom c dan nilai 1 sekiranya kolom a ialah Nei.\ndd1[list(a = \u0026#34;Nei\u0026#34;, to = 1), on = \u0026#34;a\u0026#34;, c := i.to] Buat kolom d dengan nilai 2 sekiranya kolom a ialah Ja dan kolom b ialah a\ndd1[list(a=\u0026#34;Ja\u0026#34;, b=\u0026#34;a\u0026#34;, to = 2), on = c(\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;), d := i.to] Buat kolom f dengan nilai 5 sekiranya kolom a ialah Ja dan kolom b bernilai b. Sekiranya kolom a bernilai Ja dan kolom b bernilai c maka kolom f diberikan nilai 8.\na1 \u0026lt;- c(\u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;) dd1[.(a=\u0026#34;Ja\u0026#34;, b = a1, to = c(5,8)), on = c(\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;), f := i.to] "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/12/22/col-and-row/",
                "title": "Rownames atau colnames",
                "section": "post",
                "date" : "2017.12.22",
                "body": "Rownames Pernahkah melihat data frame dimana kolom pertama tidak ada nama dan anda tidak tahu bagaimana untuk merujuk kolom tersebut? Sekiranya anda pernah menemui masalah tersebut sila baca penerangan dan penyelesaian di sini.\nSituasi ini adalah disebabkan nama tersebut ialah nama untuk barisan sahaja i.e rownames, seperti nama untuk kolom i.e colnames. Contohnya:\nDT \u0026lt;- mtcars[1:5, 1:5] DT Di sini anda lihat kolom pertama tidak mempunyai nama. Untuk mengetahui nama barisan boleh gunakan rownames(DT).\n: mpg cyl disp hp drat : Mazda RX4 21.0 6 160 110 3.90 : Mazda RX4 Wag 21.0 6 160 110 3.90 : Datsun 710 22.8 4 108 93 3.85 : Hornet 4 Drive 21.4 6 258 110 3.08 : Hornet Sportabout 18.7 8 360 175 3.15  Untuk menggunakan kolom pertama dalam kode-kode, kolom pertama harus diberikan nama kolom. Hanya menggunakan DT[1] tidak akan berjaya. Cara untuk menukarkan rownames ke colnames boleh dibuat seperti berikut:\nDT \u0026lt;- mtcars[1:5, 1:5] ## cara 1 DT2 \u0026lt;- cbind(rownames(DT), DT) rownames(DT2) \u0026lt;- NULL names(DT2)[1] \u0026lt;- \u0026#34;nama\u0026#34; ## cara 2 DT3 \u0026lt;- DT namesDT \u0026lt;- names(DT3) DT3 \u0026lt;- setNames(cbind(rownames(DT3), DT3, row.names = NULL), c(\u0026#34;nama\u0026#34;, namesDT)) R\u0026gt; DT3 nama mpg cyl disp hp drat 1 Mazda RX4 21.0 6 160 110 3.90 2 Mazda RX4 Wag 21.0 6 160 110 3.90 3 Datsun 710 22.8 4 108 93 3.85 4 Hornet 4 Drive 21.4 6 258 110 3.08 5 Hornet Sportabout 18.7 8 360 175 3.15 Sekarang kolom pertama mempunyai nama dan boleh dirujuk dalam memanipulasi data. Rownames sekarang digantikan ke nombor 1 ke 5.\nUntuk menggunakan cara data.table adalah seperti begini:\nDT4 \u0026lt;- mtcars[1:5, 1:5] nama2 \u0026lt;- rownames(DT4) library(data.table) setDT(DT4) DT4[, nama := nama2] DT4 Kolom nama daripada rownames dimasukkan\n: mpg cyl disp hp drat nama : 1: 21.0 6 160 110 3.90 Mazda RX4 : 2: 21.0 6 160 110 3.90 Mazda RX4 Wag : 3: 22.8 4 108 93 3.85 Datsun 710 : 4: 21.4 6 258 110 3.08 Hornet 4 Drive : 5: 18.7 8 360 175 3.15 Hornet Sportabout  Colnames Kadang-kadang kita ingin menukarkan nama kolom ke nama lain. Untuk menukarkan nama kolom boleh dibuat dengan pelbagai cara. Cara setNames boleh dirujuk seperti di atas. Antara cara-cara lain ialah seperti berikut:\nDT \u0026lt;- mtcars[1:5, 1:5] nama1 \u0026lt;- c(\u0026#34;cth1\u0026#34;, \u0026#34;cth2\u0026#34;) names(DT)[c(3, 5)] \u0026lt;- nama1 DT Nama untuk kolom 3 dan 5 ditukar\n: mpg cyl cth1 hp cth2 : Mazda RX4 21.0 6 160 110 3.90 : Mazda RX4 Wag 21.0 6 160 110 3.90 : Datsun 710 22.8 4 108 93 3.85 : Hornet 4 Drive 21.4 6 258 110 3.08 : Hornet Sportabout 18.7 8 360 175 3.15  Cara lain ialah menggunakan pakaj data.table.\nDT \u0026lt;- mtcars[1:5, 1:5] library(data.table) setDT(DT) nama2 \u0026lt;- c(\u0026#34;kol1\u0026#34;, \u0026#34;kol2\u0026#34;) setnames(DT, c(\u0026#34;mpg\u0026#34;, \u0026#34;hp\u0026#34;), nama2) DT Kolom mpg dan hp ditukarkan ke kol1 dan kol2.\n: kol1 cyl disp kol2 drat : 1: 21.0 6 160 110 3.90 : 2: 21.0 6 160 110 3.90 : 3: 22.8 4 108 93 3.85 : 4: 21.4 6 258 110 3.08 : 5: 18.7 8 360 175 3.15  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/11/09/pkg-rreg/",
                "title": "R pakej `rreg`",
                "section": "post",
                "date" : "2017.11.09",
                "body": "Pakej rreg sudah dimuatkan di CRAN pada 8 Ogos 2017. Pakej ini dibuat untuk memudahkan kerja-kerja visualisasi untuk data-data daripada pendaftaran kesihatan di Nasjonalt Servicemiljø for medisinske kvalitetsregistre. Untuk memakai pakej rreg boleh dipasang secara langsung dari CRAN.\ninstall.packages(\u0026#34;rreg\u0026#34;, dependencies = TRUE) Pakaj ini menggandungi beberapa fungsi untuk visualisasi data. Fungsi-fungsi berikut ialah:\n Bar chart dengan regbar Radar diagram menggunakan regrad Untuk menunjukkan tren dengan regline Menggunakan \u0026ldquo;confidence interval\u0026rdquo; atau \u0026ldquo;standard error\u0026rdquo; dengan regerr  Contoh penggunaan boleh dilihat dengan melarikan contoh-contoh yang tersedia dengan menggunakan fungsi example.\nlibrary(rreg) example(regbar) "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/10/23/menamakan-level-di-faktor/",
                "title": "Menamakan level di faktor",
                "section": "post",
                "date" : "2017.10.23",
                "body": "Kekadang nama untuk level yang diberikan di faktor bagi variabel jenis kumpulan (category) tidak bersesuaian dengan yang kita inginkan. Untuk menukarkan nama level tersebut kepada nama-nama yang lain, beberapa cara boleh dipakai. Sesetengah cara yang ditunjukkan di sini bergantung dengan jenis data yang dipakai iaitu data.frame atau data.table.\nData frame Untuk menggunakan cara data.frame ialah seperti di bawah. Sekiranya df$bandar tidak ditukarkan ke factor, nilai levels yang ditetapkan iaitu nama bandar-bandar hanya akan diketahui bila melihat struktur data dengan str (structure) atau attr (attribute).\nvar \u0026lt;- LETTERS[1:5] bandar \u0026lt;- c(1:4, 9) #sebagai numeric df \u0026lt;- data.frame(var, bandar) levels(df$bandar) \u0026lt;- c(\u0026#34;Tawau\u0026#34;, \u0026#34;Semporna\u0026#34;, \u0026#34;Kunak\u0026#34;, \u0026#34;Lahad Datu\u0026#34;, \u0026#34;lain-lain\u0026#34;) ## untuk lihat attribute variabel bandar yang ditetapkan seperti di atas str(df) attr(df$bandar, \u0026#34;levels\u0026#34;) Levels nilai iaitu nama bandar-bandar boleh dilihat dengan menukarkan variable bandar dari jenis nombor (numeric) ke faktor (factor).\n## tukar \u0026#39;bandar\u0026#39; ke factor df2 \u0026lt;- df df2$bandar \u0026lt;- factor(df2$bandar) levels(df2$bandar) \u0026lt;- c(\u0026#34;Tawau\u0026#34;, \u0026#34;Semporna\u0026#34;, \u0026#34;Kunak\u0026#34;, \u0026#34;Lahad Datu\u0026#34;, \u0026#34;lain-lain\u0026#34;) Sekiranya ingin menetapkan labels (nama bandar-badar di residensi Tawau) bagi levels tertentu contohnya nilai c(1,2,3,4,9), cara ini boleh dipakai:\nnilai \u0026lt;- c(\u0026#34;Tawau\u0026#34;, \u0026#34;Semporna\u0026#34;, \u0026#34;Kunak\u0026#34;, \u0026#34;Lahad Datu\u0026#34;, \u0026#34;lain-lain\u0026#34;) df$bandar \u0026lt;- factor(df$bandar, levels = c(1:4, 9), labels = nilai) Cara ini untuk mengelakkan kesilapkan menamakan (labels) untuk levels.\nData table Sekiranya ingin memakai cara data.table, data harus dikonvert ke data.table contohnya setDT(df) sebelum memakai fungsi yang ditunjukkan di sini. Cara yang dibuat untuk data frame juga boleh dipakai di data.table tetapi untuk mempercepatkan proses, cara data.table adalah seperti berikut:\nlibrary(data.table) DT \u0026lt;- data.table(a=rep(0:1, 5), b=letters[1:10]) val \u0026lt;- c(\u0026#34;no\u0026#34;, \u0026#34;yes\u0026#34;) # 0=No, 1=Yes ## Boleh pakai cara biasa levels(DT$a) \u0026lt;- val ## Tukar melalui rujukan tanpa buat salinan setattr(DT$a, \u0026#34;levels\u0026#34;, c(\u0026#34;no\u0026#34;, \u0026#34;yes\u0026#34;)) Sekiranya ingin membuat salinan di kolom, boleh buat seperti untuk menukarkan kode\nDT[.(a = 0:1, new = c(\u0026#34;no\u0026#34;, \u0026#34;yes\u0026#34;)), on = \u0026#34;a\u0026#34;] a b new 1: 0 a no 2: 0 c no 3: 0 e no 4: 0 g no 5: 0 i no 6: 1 b yes 7: 1 d yes 8: 1 f yes 9: 1 h yes 10: 1 j yes Cara lain ialah menggunakan fungsi setattr. Tetapi cara ini harus digunakan dengan berhati-hati kerana labels harus tepat dengan jumlah levels.\ndf3 \u0026lt;- df setDT(df3) ## tukar bandar ke faktor df3[, bandar := as.factor(bandar)] ## tetapkan levels untuk bandar df3[, setattr(x = bandar, name = \u0026#34;levels\u0026#34;, value = c(\u0026#34;Tawau\u0026#34;, \u0026#34;Semporna\u0026#34;, \u0026#34;Kunak\u0026#34;, \u0026#34;Lahad Datu\u0026#34;, \u0026#34;lain-lain\u0026#34;))] "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/10/11/susun-factor/",
                "title": "Susun factor",
                "section": "post",
                "date" : "2017.10.11",
                "body": " Susun ketinggian bar Nama di aksis  Bila buat bar plot cara asas di R atau menggunakan pakej ggplot2, susunan levels di x-aksis disusun semula menggikut abjad. Oleh sebab itu sekiranya ingin menyusun mengikut aturcara tertentu, levels di x-aksis harus disusun semula. Pelbagai cara untuk menyusun variable boleh dibuat contohnya menggunakan order (dari \u0026ldquo;base\u0026rdquo;) dan reorder (dari \u0026ldquo;stat\u0026rdquo;). Kedua-dua fungsi ini sudah tersedia di R tanpa perlu memuat turun sebarang pakej.\nCara reorder adalah yang paling mudah tetapi agak lambat berbanding order sekiranya ingin dipakai untuk fungsi di Big Data.\nUntuk memakai cara order dari \u0026ldquo;base\u0026rdquo;. Dengan menggunakan with akan lebih mempercepatkan proses:\nSusun ketinggian bar Cara untuk menyusun bar menaik atau menurun\n## data data \u0026lt;- data.frame(a = LETTERS[1:10], b = rnorm(10, mean = 30, sd = 5), c = runif(10, 10, 50), d = letters[1:10], e = sample(1:100, size = 10, replace = FALSE)) ## susun \u0026#34;a\u0026#34; mengikut nilai \u0026#34;b\u0026#34; menaik data$a \u0026lt;- factor(data$a, levels = data$a[order(data$b)]) ## susun \u0026#34;a\u0026#34; mengikut nilai \u0026#34;b\u0026#34; menurun data$a \u0026lt;- factor(data$a, levels = data$a[order(data$b, decreasing = TRUE)]) ## Buat plot library(ggplot2) data2 \u0026lt;- copy(data) ggplot(data2, aes(a, b)) + geom_bar(stat = \u0026#39;identity\u0026#39;)   Bila menggunakan with, penulisan kode juga akan lebih mudah. Contohnya:\ndata$d \u0026lt;- with(data2, factor(d, levels = d[order(e, decreasing = FALSE)])) Nama di aksis Sekiranya ingin menyusun x-aksis mengikut cara lain selain dari nilai menurun atau menaik melalui pilihan decreasing = TRUE, boleh juga menetapkan susunan cara manual. Bila memakai cara ini harus memberikan nama susunan dengan tepat seperti nama di variable.\n## contoh data data3 \u0026lt;- data.frame(a = LETTERS[1:4], b = sample(20:50, size = 4)) ## Susun cara sendiri data3$a \u0026lt;- factor(data3$a, levels = c(\u0026#34;B\u0026#34;, \u0026#34;D\u0026#34;, \u0026#34;A\u0026#34;, \u0026#34;C\u0026#34;)) ## plot ggplot(data3, aes(a, b)) + geom_bar(stat = \u0026#39;identity\u0026#39;)   Untuk memakai cara reorder dari \u0026ldquo;stat\u0026rdquo;:\n## pakai data sama seperti di atas cumpa pakai factor \u0026#34;d\u0026#34; dan nilai \u0026#34;e\u0026#34; data$d \u0026lt;- reorder(data$d, data$e) Cara lain untuk menyusun semula faktor variable menggikut susunan tertentu boleh juga dilaksanakan dengan menggunakan fungsi fct_reorder atau fct_reorder2 dari pakej fotcats yang boleh dibaca di sini. Pakej ini juga ialah sebahagian daripada pakej tidyverse yang mengandungi pakej-pakej lain seperti dplyr dan ggplot2.\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/09/13/locale/",
                "title": "Masalah locale",
                "section": "post",
                "date" : "2017.09.13",
                "body": "Kekadang bila buat analisis contohnya dengan menggunakan funksi grep timbul masalah seperti begini:\ngrep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) character(0) Warning messages: 1: In grep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) : input string 9 is invalid in this locale 2: In grep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) : input string 10 is invalid in this locale 3: In grep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) : input string 12 is invalid in this locale 4: In grep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) : input string 13 is invalid in this locale 5: In grep(\u0026#34;settav\u0026#34;, colnames(regdata), value = TRUE) : input string 14 is invalid in this locale Ini adalah disebabkan oleh penetapan bahasa yang digunakan. Larikan sessionInfo() untuk lihat locale yang terdapat di komputer atau Sys.getlocale() untuk melihat aturcara locale di komputer yang dipakai. Kemudian boleh tukarkan ke bahasa yang dipakai. Aturcara boleh dibace di R manual. Kekadang matikan locale tertentu dengan cara seperti dibawah dapat selesaikan masalah:\nSys.setlocale(locale = \u0026#34;C\u0026#34;) Kemudian boleh atifkan semula ke sistem locale default. Pemakaian locale = \u0026quot;\u0026quot; untuk menetapkan yang sistem default dipakai.\nSys.setlocale(categories: = \u0026#34;LC_ALL\u0026#34;, locale = \u0026#34;\u0026#34;) Untuk penetapan locale default boleh dibuat di .Rprofile\nBila memakai Linux, Sys.locale boleh di lihat di /etc/default/locale dan jika mahu menukarkan locale di Linux boleh pakai komando seperti ini di shell.\nsudo locale-gen nb_NO.UTF-8 sudo dpkg-reconfigure locales "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/09/10/hugo-blog-in-org-subtree-export/",
                "title": "Writing Hugo blog in Org",
                "section": "post",
                "date" : "2017.09.10",
                "body": "First heading within the post  This post will be exported as content/posts/writing-hugo-blog-in-org-subtree-export.md. Its title will be \u0026ldquo;Writing Hugo blog in Org\u0026rdquo;. It will have hugo and org tags and emacs as category. The menu item weight and post weight are auto-calculated. The menu item identifier is auto-set. The lastmod property in the front-matter is set automatically to the time of export.  A sub-heading under that heading  It\u0026rsquo;s draft state will be marked as true as the subtree has the todo state set to TODO.    Figure 2: plot example\n  With the point anywherein this Writing Hugo blog in Org post subtree, do C-c C-e H H to export just this post.\nThe exported Markdown has a little comment footer as set in the Local Variables section\nKeep on testing Just keep on testing\n"
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/08/31/dt-special-symbol/",
                "title": "special symbol",
                "section": "post",
                "date" : "2017.08.31",
                "body": " .N Mult .SD dan .SDcols .I .GRP dan rleid Contoh dari manual  Hari ni bersempena Hari kemerdekaan Malaysia ada masa untuk ulang kaji pakej data.table. Hari ni ialah mengenai Special Symbol seperti .N, .I, .GRP, .BY. Penerangan ini diambil dari manual di data.table tetapi diedit sedikit. Untuk rujukan di sini.\nIni data yang dipakai untuk membuat contoh:\nDT = data.table(x=rep(c(\u0026#34;b\u0026#34;,\u0026#34;a\u0026#34;,\u0026#34;c\u0026#34;),each=3), v=c(1,1,1,2,2,1,1,2,2), y=c(1,6,3,7,8), a=1:9, b=9:1) X = data.table(x=c(\u0026#34;c\u0026#34;,\u0026#34;b\u0026#34;), v=8:7, foo=c(4,2)) .N Penggunaan .N selain dari untuk mendapatkan jumlah baris di dataset, .N boleh juga digunakan untuk melihat barisan terakhir di dataset. Untuk melihat barisan pertama guna DT[1].\nDT[.N] # last row, only special symbol allowed in \u0026#39;i\u0026#39; - nesten som Total DT[, .N] # total number of rows in DT DT[, .N, by=x] # number of rows in each group Mult Contoh untuk penggunaan mult (multiple rows) adalah seperti di bawah. Penggunaan fungsi mult ialah untuk menetapkan kombinasi barisan yang ingin ditunjukkan samada \u0026ldquo;all\u0026rdquo;, \u0026ldquo;first\u0026rdquo; atau \u0026ldquo;last\u0026rdquo;. Variable x dan y boleh disusun dengan menggunakan setkey(DT, x, y). Sekiranya tidak disusun terlebih dahulu sebelum dipakai maka harus menggunakan fungsi on seperti contoh di bawah.\n## contoh data dt \u0026lt;- data.table(x = c(1, 1, 3, 1, 7), y = c(1, 2, 3, 2, 6)) setkey(dt, x) ## dapatkan kombinasi yang unik udt \u0026lt;- unique(dt) ## buat kolom dengan nilai 0 dt[, c(\u0026#34;first\u0026#34;, \u0026#34;last\u0026#34;) := 0L][] x y first last 1: 1 1 0 0 2: 1 2 0 0 3: 1 2 0 0 4: 3 3 0 0 5: 7 6 0 0 Menggunakan mult untuk menetapkan kombinasi unik yang diingini. Pemakaian \u0026quot;first\u0026quot; menunjukkan kombinasi pertama sahaja. Sekiranya kombinasi yang sama terdapat dipelbagai baris, hanya barisan yang pertama dimana kombinasi tersebut ditemui akan dipilih. Pemakaian \u0026quot;last\u0026quot; memilih barisan terakhir dimana kombinasi yang diingini ditemui.\n## Sekiranya kombinasi x,y yang pertama terdapat ## di data masukkan 1 di kolom \u0026#34;first\u0026#34; dt[udt, first := 1L, on = c(\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;), mult = \u0026#34;first\u0026#34;][] ## Sekiranya kombinasi x,y yang terakhir terdapat ## di data masukkan nilai 1 di kolom \u0026#34;last\u0026#34; dt[udt, last := 1L, on = c(\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;), mult = \u0026#34;last\u0026#34;][] x y first last 1: 1 1 1 1 2: 1 2 1 0 3: 3 3 1 1 4: 1 2 0 1 5: 7 6 1 1 Contoh di bawah menunjukkan cara sekiranya hanya ingin mendapatkan index kombinasi yang diingini sahaja.\n## Untuk lihat indeks bagi kombinasi yang unik sahaja dt[unique(dt), on = c(\u0026#34;x\u0026#34;, \u0026#34;y\u0026#34;), mult = \u0026#34;first\u0026#34;, which = TRUE] [1] 1 2 3 5 Contoh lain menggunakan mult. Seperti kajian isi rumah (household) dimana \u0026ldquo;id\u0026rdquo; mewakili rumah. Semua ahli keluarga mempunyai id-rumah sama. Sekiranya ingin mencari ahli termuda atau tertua fungsi mult dapat memudahkan proses.\nset.seed(1234) dt \u0026lt;- data.table(id = sample(1:4, 10, TRUE), umur = sample(20:35, 10, TRUE), jentina = sample(1:2, 10, TRUE), kode = sample(1:5, 2, TRUE)) ## Susun umur mengikut id setkey(dt, id, umur) ## first ialah id yang sama ahli yang paling muda dt[unique(dt), muda := 1L, on = list(id), mult = \u0026#34;first\u0026#34;][] ## Pilih yang terakhir dari id yang sama - cth utk pilih ahli tertua ## sekiranya tidak pakai list di \u0026#39;on = list(nama-var)\u0026#39; boleh pakai \u0026#34;nama-var\u0026#34;. dt[unique(dt), tua := as.integer(1L), on = \u0026#34;id\u0026#34;, mult = \u0026#34;last\u0026#34;, by = .(umur)][] ## pilih nilai pertama untuk setiap kombinasi unik antara \u0026#39;id\u0026#39; dan \u0026#39;kode\u0026#39; dt[unique(dt[, c(\u0026#34;id\u0026#34;, \u0026#34;kode\u0026#34;)]), KodePertama := 1L, on = list(id, kode), mult = \u0026#34;first\u0026#34;][] ## pilih nilai terakhir untuk setiap kombinasi unik antara \u0026#39;id\u0026#39; dan \u0026#39;kode\u0026#39; dt[unique(dt[, c(\u0026#34;id\u0026#34;, \u0026#34;kode\u0026#34;)]), KodeAkhir := 1L, on = c(\u0026#34;id\u0026#34;, \u0026#34;kode\u0026#34;), mult = \u0026#34;last\u0026#34;][] Hasilnya dari contoh pemilihan ahli yang paling muda dan tua dari data di atas menggunakan \u0026quot;first\u0026quot; dan \u0026quot;last\u0026quot;. Pemakaian unique(dt) berasaskan dari penetapan yang dibuat di fungsi setkey dimana data disusun mengikut id kemudian umur terlebih dahulu.\nSekiranya pemilihan kombinasi unik berasaskan kolom lain, selain dari id dan umur yang telah ditetapkan, pemilihan kolom unik boleh dibuat secara fungsi asas menggunakan unique(dt[, c(\u0026quot;kol1\u0026quot;, \u0026quot;kol2\u0026quot;)]). Penggunaan on boleh memakai cara list atau concatenate.\nid umur jentina kode muda tua KodePertama KodeAkhir 1: 1 24 2 3 1 NA 1 NA 2: 1 24 2 2 NA NA 1 1 3: 1 31 1 3 NA 1 NA 1 4: 3 22 2 3 1 NA 1 NA 5: 3 23 1 2 NA NA 1 NA 6: 3 24 1 3 NA NA NA 1 7: 3 28 1 2 NA NA NA NA 8: 3 33 2 2 NA NA NA NA 9: 3 34 1 2 NA 1 NA 1 10: 4 24 1 3 1 1 1 1 .SD dan .SDcols Penggunaan .SD juga boleh berasaskan indeks barisan. Contoh untuk menggunakan .SDcols seperti di bawah termasuk menggunakan fungsi lapply. Tetapi penggunaan \u0026quot;.SD\u0026quot; adalah lebih lambat berbanding menggunakan fungsi \u0026quot;on\u0026quot; seperti di atas.\n# pilih kolom \u0026#39;x\u0026#39; dan \u0026#39;y\u0026#39; DT[, .SD, .SDcols = x:y] # baris pertama di semua kolom DT[, .SD[1]] # baris pertama di \u0026#39;y\u0026#39; dan \u0026#39;v\u0026#39; untuk setiap kumpulan di \u0026#39;x\u0026#39; DT[, .SD[1], by = x] # get rows *and* sum all col DT[, c(.N, lapply(.SD, sum)), by = x] # get rows *and* sum columns \u0026#39;v\u0026#39; and \u0026#39;y\u0026#39; by group DT[, c(.N, lapply(.SD, sum)), by = x, .SDcol = c(\u0026#34;v\u0026#34;, \u0026#34;y\u0026#34;)] .I Untuk dapatkan indeks barisan simbol .I boleh dipakai. Hanya vektor untuk indeks barisan yang akan diberikan dan tidak nilai di indeks tersebut. Fungsinya sama seperti seq_len(nrow(x)). Semasa penggumpulan dibuat, pada masa yang sama penggumpulan dilakukan di dalam kumpulan yang ditetapkan. Sesuai digunakan untuk membuat subset di j seperti: DT[,.I[which.max(somecol)], by=grp]. Penggunaannya same seperti fungsi which di base.\nCara lain boleh digunakan untuk membuat indentity atau ID. DT[, id := .I] seperti menggunakan DT[, id := seq_len(.N)\nPemakaian .I[1] contohny digunakan untuk mendapatkan index dimana nilai pertama bagi setiap kumpulan di x. Untuk kumpulan b di kolom x, nilai pertama ialah di barisan 1, nilai pertama bagi kumpulan a di kolom x ialah di barian ke 4 dan nilai pertama kumpulan c di barisan ke 7.\nDT x v y a b 1: b 1 1 1 9 2: b 1 6 2 8 3: b 1 3 3 7 4: a 2 7 4 6 5: a 2 8 5 5 6: a 1 1 6 4 7: c 1 6 7 3 8: c 2 3 8 2 9: c 2 7 9 1 DT[, .I[1], by = x] # first row number in DT corresponding to each group x V1 1: b 1 2: a 4 3: c 7 DT[, .(index = .I[1]), by = x] # Namakan variable untuk index x index 1: 1 1 2: 3 4 3: 7 5 Untuk dapatkan index bagi nilai maksimum mengikut kumpulan di kolom x boleh dibuat seperti cara di bawah.\nDT[, .I[which.max(y)], by = x] # which row number with the max \u0026#39;y\u0026#39; by \u0026#39;x\u0026#39; x V1 1: b 2 2: a 5 3: c 9 .GRP dan rleid Untuk mengkaji menggikut kumpulan secara penyusunan.\nDT[, grp := .GRP, by = x][] # add a group counter x v y a b grp 1: b 1 1 1 9 1 2: b 1 6 2 8 1 3: b 1 3 3 7 1 4: a 2 7 4 6 2 5: a 2 8 5 5 2 6: a 1 1 6 4 2 7: c 1 6 7 3 3 8: c 2 3 8 2 3 9: c 2 7 9 1 3 DT[, .N, by = rleid(v)] # get count of consecutive runs of \u0026#39;v\u0026#39; rleid N 1: 1 3 2: 2 2 3: 3 2 4: 4 2 DT[, c(.(ym = max(y)), lapply(.SD, min)), by = rleid(v), .SDcols = v:b] # compute \u0026#39;j\u0026#39; for each consecutive runs of \u0026#39;v\u0026#39; rleid ym v y a b 1: 1 6 1 1 1 7 2: 2 8 2 7 4 5 3: 3 6 1 1 6 3 4: 4 7 2 3 8 1 Untuk gabungkan dua dataset. Tapi cara ini masih tidak difahami :-(\nX x v foo 1: c 8 4 2: b 7 2 ## need more info for this X[, DT[.BY, y, on = \u0026#34;x\u0026#34;], by = x] # join within each group x V1 1: c 6 2: c 3 3: c 7 4: b 1 5: b 6 6: b 3 Untuk tukar nilai bagi setiap barisan pertama di kumpulan yang sama. Ini biasanya dipakai contohnya bila membuat kajian keluarga dan ingin memberikan kod tertentu yang membezakan keluarga 1 dan 2 dsb.\nCara ini tidak hard code data. Kolom c tidak dimasukkan ke data dan hanya disimpan di memory sahaja. Untuk simpan harus assign to save object atau gunakan cara mult.\n## Recode to 99 for first row in each group by x DT[, {vDT = copy(.SD) #kopi semua kolom vDT[1, c := 99] #buat kolom C row pertama nilai 99 vDT}, by = x] x v y a b grp c 1: b 1 1 1 9 1 99 2: b 1 6 2 8 1 NA 3: b 1 3 3 7 1 NA 4: a 2 7 4 6 2 99 5: a 2 8 5 5 2 NA 6: a 1 1 6 4 2 NA 7: c 1 6 7 3 3 99 8: c 2 3 8 2 3 NA 9: c 2 7 9 1 3 NA DT[unique(x), d:=99, on = \u0026#34;x\u0026#34;, mult = \u0026#34;first\u0026#34;][] Contoh dari manual Ini ialah contoh dan penerangan dari manual sekiranya penerangan diatas tidak difahami.\n## Not run: DT = data.table(x=rep(c(\u0026#34;b\u0026#34;,\u0026#34;a\u0026#34;,\u0026#34;c\u0026#34;),each=3), v=c(1,1,1,2,2,1,1,2,2), y=c(1,3,6), a=1:9, b=9:1) DT X = data.table(x=c(\u0026#34;c\u0026#34;,\u0026#34;b\u0026#34;), v=8:7, foo=c(4,2)) X DT[.N] # last row, only special symbol allowed in \u0026#39;i\u0026#39; DT[, .N] # total number of rows in DT DT[, .N, by=x] # number of rows in each group DT[, .SD, .SDcols=x:y] # select columns \u0026#39;x\u0026#39; and \u0026#39;y\u0026#39; DT[, .SD[1]] # first row of all columns DT[, .SD[1], by=x] # first row of \u0026#39;y\u0026#39; and \u0026#39;v\u0026#39; for each group in \u0026#39;x\u0026#39; DT[, c(.N, lapply(.SD, sum)), by=x] # get rows *and* sum all columns by group DT[, .I[1], by=x] # row number in DT corresponding to each group starting point DT[, .N, by=rleid(v)] # get count of consecutive runs of \u0026#39;v\u0026#39; DT[, c(.(y=max(y)), lapply(.SD, min)), by=rleid(v), .SDcols=v:b] # compute \u0026#39;j\u0026#39; for each consecutive runs of \u0026#39;v\u0026#39; DT[, grp := .GRP, by=x] # add a group counter X[, DT[.BY, y, on=\u0026#34;x\u0026#34;], by=x] # join within each group ## End(Not run) "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/08/31/test-figure/",
                "title": "Test figure",
                "section": "post",
                "date" : "2017.08.31",
                "body": "Percobaan untuk memasukkan gambar di post dan penetapan size.\n  "
            }
        
    ,
        
            {
                "ref": "https://yusbk.github.io/2017/07/17/kolom-index/",
                "title": "Pilih kolom cara indeks atau nama kolom",
                "section": "post",
                "date" : "2017.07.17",
                "body": "Bila memakai pakej data.table untuk membuat fungsi sebagai kode R, pemilihan kolom boleh dibuat dengan menetapkan nama kolom atau indeks kolom. Akan tetapi pemakaian indeks untuk memilih kolom tidak disarankan kerana ia akan mengakibatkan kode susah untuk difahami. Selain itu sekiranya ada kesilapan kode disebabkan indeks yang merujuk kolom yang tidak diingini, mesej amaran tidak akan diberikan. Oleh itu adalah disarankan untuk memakai nama kolom berbanding indeks kolom.\nWalaubagaimanapun, sekiranya masih ingin memakai indeks kolom juga atas sebab-sebab tertentu, terdapat tiga cara yang boleh dipakai. Baca seterusnya untuk dapatkan penerangan.\nNama kolom Untuk memilih kolom berasaskan nama kolom, boleh memakai get untuk satu kolom atau mget untuk memilih pelbagai kolom (multiple get).\nlibrary(data.table) DT = data.table(A = 1:6, B = 8:3, C = 5:10) ## Cara asas DT[B == 4, ] ## Pakai objek var \u0026lt;- \u0026#34;B\u0026#34; value \u0026lt;- 4 DT[get(var) == value, ] ## pilih pelbagai kolom vars \u0026lt;- c(\u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;) DT[, mget(vars)] #cara mget Sekiranya memakai get untuk memilih pelbagai kolom akan hanya menghasilkan vektor kolom pertama dan bukan data.table kolom A dan B.\nIndeks Untuk memilih hanya satu kolom sahaja, caranya:\nlibrary(data.table) DT = data.table(A = 1:6, B = 8:3, C = 5:10) ## pilih kolom 2 (B) yang nilainya bersamaan 4 DT[.(4), on = names(DT)[2]] #cara 1 DT[DT[[2]] == 4] #cara 2 DT[DT[, .I[.SD == 4], .SDcols = 2]] #cara 3 ## sebagai objek var \u0026lt;- 2 value \u0026lt;- 4 DT[.(value), on = names(DT)[var]] #cara 1 DT[DT[[var]] == value] #cara 2 DT[DT[, .I[.SD == value], .SDcols = var]] #cara 3 ## indeks kolom guna fungsi grep atau which vari \u0026lt;- grep(\u0026#34;B\u0026#34;, colnames(DT)) vari \u0026lt;- which(names(DT) == \u0026#34;B\u0026#34;) #cara ini lebih laju DT[.(4), on = names(DT)[vari]] Hasilnya untuk kode-kode di atas adalah seperti ini:\nA B C 1: 3 4 5 Penggunaan .() di i stuktur data.table DT[i, j, by] adalah alias untuk penggunaan list(). Fungsi ini sama seperti cara 1 di atas.\nDT[list(4), on = names(DT)[2]] Sekiranya ingin pakai index untuk di fungsi by adalah seperti di bawah. Cara ini ialah untuk mengira jumlah huruf-huruf i kolom A.\nDT1 \u0026lt;- data.table(A = letters[1:5], B = rep(1:13)) ## dapatkan index kolom menggunakan \u0026#39;grep\u0026#39; ind \u0026lt;- grep(\u0026#34;A\u0026#34;, names(DT1)) ## atau menggunakan \u0026#39;which\u0026#39; ind \u0026lt;- which(names(DT1) == \u0026#34;A\u0026#34;) ## note - guna \u0026#39;which\u0026#39; lebih pantas dari \u0026#39;grep\u0026#39; ## jumlah setiap huruf DT1[, .N, by = DT1[[ind]]] Hasilnya\nDT1 N 1: a 3 2: b 3 3: c 3 4: d 2 5: e 2 "
            }
        
    
]