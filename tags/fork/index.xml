<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>fork on ყųʂƙąɱ</title>
		<link>https://yusbk.github.io/tags/fork/</link>
		<description>Recent content in fork </description>
		<generator>Hugo -- gohugo.io</generator>
		
  		<language>en</language>
		
		<managingEditor>Page(/tags/fork) (Yusman Kamaleri)</managingEditor>
    	
  		<lastBuildDate>Sun, 14 Jun 2020 00:00:00 +0200</lastBuildDate>
		
		<atom:link href="/tags/fork/" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Basic use of drake</title>
			<link>https://yusbk.github.io/2020/06/15/basic-drake/</link>
			<pubDate>Mon, 15 Jun 2020 23:22:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2020/06/15/basic-drake/</guid>
			<description>There are various ways to organise your R workflow. If you are working with a big project, then Airflow might be for you. But for the majority of R project codes, drake package will fullfilled your need.
Here is the basic use of drake. The example here will be using a simple collections of functions.
fun1 &amp;lt;- function(x = globalenv()$x){ x + 2 } fun2 &amp;lt;- function(i = 3){ i * 10 } fun3 &amp;lt;- function(){ x1 = fun1() x2 = fun2(5) x1 + x2 } fun4 &amp;lt;- function(z = globalenv()$z){ x1 = 1 + z x2 = fun2(2) x3 = fun3() x1 + x2 + x3 } Install drake development version in Github here.</description>
		</item>
      	
		<item>
			<title>git fork</title>
			<link>https://yusbk.github.io/2020/06/14/git-fork/</link>
			<pubDate>Sun, 14 Jun 2020 00:00:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2020/06/14/git-fork/</guid>
			<description>This is just 100% a copy from gist so I can check it when needed.
So you&amp;rsquo;ve cloned somebody&amp;rsquo;s repo from github, but now you want to fork it and contribute back. Never fear!
Technically, when you fork &amp;ldquo;origin&amp;rdquo; should be your fork and &amp;ldquo;upstream&amp;rdquo; should be the project you forked; however, if you&amp;rsquo;re willing to break this convention then it&amp;rsquo;s easy.
Off the top of my head
 Fork their repo on Github In your local, add a new remote to your fork; then fetch it, and push your changes up to it  git remote add my-fork git@github.</description>
		</item>
      	
		<item>
			<title>Tetapkan PATH</title>
			<link>https://yusbk.github.io/2019/01/20/tetapkan-path/</link>
			<pubDate>Sun, 20 Jan 2019 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2019/01/20/tetapkan-path/</guid>
			<description>Ubuntu Windows  Bila ingin memakai program di Ubuntu atau Windows melalui terminal, perlu daftarkan program tersebut di PATH. Disini saya terangkan caranya di Ubuntu dan Windows.
Ubuntu Bila pasang program di Ubuntu melalui source boleh tetapkan dimana program disimpan melalui penetapkan --prefix bila melarikan ./configure. Cara biasa bila pasang program dari source ialah:
./configure make make install Bila ./configure tidak menetapkan prefix secara tidak langsung komando yang dipakai ialah .</description>
		</item>
      	
		<item>
			<title>Susun factor</title>
			<link>https://yusbk.github.io/2017/10/11/susun-factor/</link>
			<pubDate>Wed, 11 Oct 2017 00:00:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2017/10/11/susun-factor/</guid>
			<description>Susun ketinggian bar Nama di aksis  Bila buat bar plot cara asas di R atau menggunakan pakej ggplot2, susunan levels di x-aksis disusun semula menggikut abjad. Oleh sebab itu sekiranya ingin menyusun mengikut aturcara tertentu, levels di x-aksis harus disusun semula. Pelbagai cara untuk menyusun variable boleh dibuat contohnya menggunakan order (dari &amp;ldquo;base&amp;rdquo;) dan reorder (dari &amp;ldquo;stat&amp;rdquo;). Kedua-dua fungsi ini sudah tersedia di R tanpa perlu memuat turun sebarang pakej.</description>
		</item>
      	
		<item>
			<title>special symbol</title>
			<link>https://yusbk.github.io/2017/08/31/dt-special-symbol/</link>
			<pubDate>Thu, 31 Aug 2017 00:00:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2017/08/31/dt-special-symbol/</guid>
			<description>.N Mult .SD dan .SDcols .I .GRP dan rleid Contoh dari manual  Hari ni bersempena Hari kemerdekaan Malaysia ada masa untuk ulang kaji pakej data.table. Hari ni ialah mengenai Special Symbol seperti .N, .I, .GRP, .BY. Penerangan ini diambil dari manual di data.table tetapi diedit sedikit. Untuk rujukan di sini.
Ini data yang dipakai untuk membuat contoh:
DT = data.table(x=rep(c(&amp;#34;b&amp;#34;,&amp;#34;a&amp;#34;,&amp;#34;c&amp;#34;),each=3), v=c(1,1,1,2,2,1,1,2,2), y=c(1,6,3,7,8), a=1:9, b=9:1) X = data.table(x=c(&amp;#34;c&amp;#34;,&amp;#34;b&amp;#34;), v=8:7, foo=c(4,2)) .</description>
		</item>
      	
		<item>
			<title>git submodule</title>
			<link>https://yusbk.github.io/2020/09/25/git-submodule/</link>
			<pubDate>Fri, 25 Sep 2020 11:45:50 +0200</pubDate>
			<guid>https://yusbk.github.io/2020/09/25/git-submodule/</guid>
			<description>Repo baru Bila buat repo baru dan ingin tetapkan submodule untuk tema harbor dan folder public ke yusbk.github.io. Submodule dipakai untuk memasukkan fungsi yang terdapat di repos lain ke dalam repos sendiri ie. subfolder di folder utama repos.
Contoh dibawah ialah untuk memasukkan folder harbor ke dalam folder themes di folder utama. Subfolder public pula ialah submodule dari repo blog di Github.
# themes git submodule add https://github.com/matsuyoshi30/harbor.git themes/harbor # yusbk.</description>
		</item>
      	
		<item>
			<title>Test figure</title>
			<link>https://yusbk.github.io/2017/08/31/test-figure/</link>
			<pubDate>Thu, 31 Aug 2017 00:00:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2017/08/31/test-figure/</guid>
			<description>Percobaan untuk memasukkan gambar di post dan penetapan size.
  </description>
		</item>
      	
	</channel>
</rss>
