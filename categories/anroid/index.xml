<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>anroid on ùîÇùìæùìºùì¥ùì™ùì∂</title>
		<link>https://yusbk.github.io/categories/anroid/</link>
		<description>Recent content in anroid </description>
		<generator>Hugo -- gohugo.io</generator>
		
  		<language>en</language>
		
		<managingEditor>Page(/categories/anroid) (Yusman Kamaleri)</managingEditor>
    	
  		<lastBuildDate>Mon, 15 Oct 2018 00:00:00 +0000</lastBuildDate>
		
		<atom:link href="/categories/anroid/" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Mount drive</title>
			<link>https://yusbk.github.io/2022/02/10/mount-drive/</link>
			<pubDate>Thu, 10 Feb 2022 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2022/02/10/mount-drive/</guid>
			<description>Install Mount manually Credential Auto mount Other option to mount Execute Access to folders  First published date: 2021-02-22
This is only relevant to my personal reference at work.
The address for drive F and N is as follow:</description>
		</item>
      	
		<item>
			<title>Good to know</title>
			<link>https://yusbk.github.io/2022/01/25/good-to-know/</link>
			<pubDate>Tue, 25 Jan 2022 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2022/01/25/good-to-know/</guid>
			<description>Things that I find it useful during my work:
Debuging warnings Sometimes it&amp;rsquo;s nice to know where in the code that generate warnings especially when it&amp;rsquo;s related to NA introduced by coercion. To do this we can change the options to make warning as error.</description>
		</item>
      	
		<item>
			<title>YesNo question</title>
			<link>https://yusbk.github.io/2022/01/04/yesno-question/</link>
			<pubDate>Tue, 04 Jan 2022 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2022/01/04/yesno-question/</guid>
			<description>Different ways to make your R session interactive for asking question and receive the answer as an input.
readline You can find some example in StackOverflow or Geeksforgeeks. Basically is just like this:
cp &amp;lt;- as.integer(readline(prompt = &amp;#34;Vil du kopiere filen?</description>
		</item>
      	
		<item>
			<title>Cross-reference</title>
			<link>https://yusbk.github.io/2021/12/22/org-cross-ref/</link>
			<pubDate>Wed, 22 Dec 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/12/22/org-cross-ref/</guid>
			<description>Reference to this is here.
Section link The easierst is to use CUSTOM_ID as the example below and refer to it with text [[#sec:one][Section 1]] or reference with number only [[#sec:one]].
* Section One :PROPERTIES: :CUSTOM_ID: sec:one :END: The link with text will be &#39;.</description>
		</item>
      	
		<item>
			<title>Doom tips</title>
			<link>https://yusbk.github.io/2021/12/22/doom-emacs-tips/</link>
			<pubDate>Wed, 22 Dec 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/12/22/doom-emacs-tips/</guid>
			<description>First published date: 2021-04-27
Some tips to learn the keybindings in Doom and Evil in the process of migrating from my vanilla Emacs settings. For overview of keybindings type SPC-h-b-b. Other good references:
 Narra&amp;rsquo;s Blog - Doom Tips and Howtos Org Mode Shortcuts for Emacs Doom Gist of Hjertnes Evil-mode collection  Nice Doom Emacs Cheatsheet from niyumard.</description>
		</item>
      	
		<item>
			<title>Smerge, ediff and diff</title>
			<link>https://yusbk.github.io/2021/12/22/magit-ediff/</link>
			<pubDate>Wed, 22 Dec 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/12/22/magit-ediff/</guid>
			<description>First published: 2021-04-30
For enditing conflict in git, use smerge or ediff.
Smerge Basic workflow:
 Open magit status with SPC g g in Doom Identify the mark with Unmerged under Unstage list Go to the file and press Enter to open the file The base command for Smerge is C-c ^ You will see the conflict and selecting the upper with C-c ^ u and lower with C-c ^ l To select all &amp;lsquo;conflicting&amp;rsquo; changes press C-c ^ a To navigate the conflicts use C-c ^ n and C-c ^ p for next and previous conflict To see all the keybindings use C-c ^ h  With DOOM and hydra:</description>
		</item>
      	
		<item>
			<title>Environment</title>
			<link>https://yusbk.github.io/2021/12/08/r-environment/</link>
			<pubDate>Wed, 08 Dec 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/12/08/r-environment/</guid>
			<description>Several nice blogs and references on the net to read on this stuff. Among those:
 Environments in R How R Searches and Finds Stuff  This discussion from StackOverflow explains nicely with example on the difference between parent.env() and parent.</description>
		</item>
      	
		<item>
			<title>Ellipsis ‚Ä¶</title>
			<link>https://yusbk.github.io/2021/12/03/ellipsis/</link>
			<pubDate>Fri, 03 Dec 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/12/03/ellipsis/</guid>
			<description>First published: 2020-12-12
Just to remind me how I could use ellipsis or the three dots ... in my coding. There are three scenarios I find it useful:
Function wrapper When creating a function wrapper and instead of providing all the arguments to be send further, you could just use .</description>
		</item>
      	
		<item>
			<title>MS Access Shutdown</title>
			<link>https://yusbk.github.io/2021/11/09/access-shutdown/</link>
			<pubDate>Tue, 09 Nov 2021 00:00:00 +0100</pubDate>
			<guid>https://yusbk.github.io/2021/11/09/access-shutdown/</guid>
			<description>How to shutdown all running Access when you need to do some changes. This is just a summary from Microsoft Docs. The steps are:
Create empty text file  This file will be the key. Name the file to anything like checkfile.</description>
		</item>
      	
		<item>
			<title>Merge Selected File</title>
			<link>https://yusbk.github.io/2021/09/30/git-merge-selected-file/</link>
			<pubDate>Thu, 30 Sep 2021 00:00:00 +0200</pubDate>
			<guid>https://yusbk.github.io/2021/09/30/git-merge-selected-file/</guid>
			<description>This guide is from StackOverflow on how to selectively merge files form one branch to another.
Basically it&amp;rsquo;s:
git merge --no-ff --no-commit dev Where dev is the branch you want to merge from into the current branch.
The --no-commit option will stage the files that have been merged by Git without actually committing them.</description>
		</item>
      	
	</channel>
</rss>
